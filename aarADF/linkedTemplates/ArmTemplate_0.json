{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "aarADF"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/sample efn')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/5 BlackOps_Coveo_Data_Reconciliation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "select count(*) wo_count           from [stg].[CoveoPushData_Json_WO_CSP_CNT_Day1]\nselect count(*) bpart_count       from [stg].[CoveoPushData_Json_BPart_Delta_Day1]\nselect count(*) cnt_count           from [stg].[coveopushdata_json_cnt_partial_delta_day1]\nselect count(*) bops_count        from [stg].[CoveoPushData_Json_Bops_Partial_Delta_Day1]\nselect count(*) cnt_count_bpart from [stg].[CoveoPushData_Json_BPart_Delta_Day1]\n     where SUBSTRING(jsonstring,CHARINDEX('ec_contracted_for_cus',jsonstring),25) <> 'ec_contracted_for_cus\":[]'\n\nselect count(*) wo_update from [stg].[CoveoPushData_Json_WO_CSP_CNT_Delta_Update]\nselect count(*) wo_add from [stg].[CoveoPushData_Json_WO_CSP_CNT_Delta_Add]\nselect count(*) wo_delete from [stg].[CoveoPushData_Json_WO_CSP_CNT_Delta_Delete]\n\nSELECT COUNT(*) Bpart_update FROM [stg].[CoveoPushData_Json_BPart_Delta_Add_Update]  WHERE delta_type='U'\nSELECT COUNT(*) Bpart_add FROM [stg].[CoveoPushData_Json_BPart_Delta_Add_Update]  WHERE delta_type='A'\nSELECT count(*) Bpart_delete FROM [stg].[CoveoPushData_Json_BPart_Delta_Delete]\n\nSELECT COUNT(*) CNT_update  FROM [stg].[CoveoPushData_Json_cnt_partial_Delta_Update_Add] WHERE delta_type='U'\nSELECT COUNT(*) CNT_ADD     FROM [stg].[CoveoPushData_Json_cnt_partial_Delta_Update_Add] WHERE delta_type='A'\nSELECT COUNT(*) CNT_DELETE  FROM [stg].[CoveoPushData_Json_cnt_partial_Delta_Update_Add] WHERE delta_type='D'\n\nSELECT COUNT(*) bops_update  FROM [STG].[CoveoPushData_Json_bops_Partial_Delta_Update_Add] WHERE delta_type='U'\nSELECT COUNT(*) bops_ADD     FROM [STG].[CoveoPushData_Json_bops_Partial_Delta_Update_Add] WHERE delta_type='A'\nSELECT COUNT(*) bops_DELETE  FROM [STG].[CoveoPushData_Json_bops_Partial_Delta_Update_Add] WHERE delta_type='D'"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Script2",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "INSERT INTO stg.BlackOps_Coveo_data_reconciliation(BlackOps_wo_CNT_BOPS,\n Blackops_Bpart ,\n Blackops_cnt,\n Blackops_bops,\n Blackops_cnt_bpart,\n Created_date,\n Blackops_wo_update,\n Blackops_wo_add,\n Blackops_wo_delete,\nBlackops_bpart_update,\nBlackops_bpart_add,\nBlackops_bpart_delete,\nBlackops_cnt_update,\nBlackops_cnt_add,\nBlackops_cnt_delete,\nBlackops_bops_update,\nBlackops_bops_add,\nBlackops_bops_delete\n )\nvalues( @{activity('Script1').output.resultSets[0].rows[0].wo_count},\n        @{activity('Script1').output.resultSets[1].rows[0].bpart_count},\n        @{activity('Script1').output.resultSets[2].rows[0].cnt_count},        \n        @{activity('Script1').output.resultSets[3].rows[0].bops_count},\n        @{activity('Script1').output.resultSets[4].rows[0].cnt_count_bpart},\n        getdate(),\n        @{activity('Script1').output.resultSets[5].rows[0].wo_update},\n        @{activity('Script1').output.resultSets[6].rows[0].wo_add},\n        @{activity('Script1').output.resultSets[7].rows[0].wo_delete},        \n        @{activity('Script1').output.resultSets[8].rows[0].Bpart_update},\n        @{activity('Script1').output.resultSets[9].rows[0].Bpart_add},\n        @{activity('Script1').output.resultSets[10].rows[0].Bpart_delete},\n        @{activity('Script1').output.resultSets[11].rows[0].cnt_update},\n        @{activity('Script1').output.resultSets[12].rows[0].cnt_add},        \n        @{activity('Script1').output.resultSets[13].rows[0].cnt_delete},\n        @{activity('Script1').output.resultSets[14].rows[0].bops_update},\n        @{activity('Script1').output.resultSets[15].rows[0].bops_add},                       \n        @{activity('Script1').output.resultSets[16].rows[0].bops_delete}                               \n)",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Script3",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "select count(*) stibo_parts from dbo.Stibo_Parts\n\nselect count(*) vendorparts from dbo.VendorParts\n\nselect count(*) vendorparts_attributespivot from dbo.vendorparts_attributespivot\n\nselect count(*) vendorparts_assetattributes from dbo.vendorparts_assetattributes\n\nselect count(*) customer_specific_parts from dbo.customer_specific_parts\n\nSELECT count(*) contracted_items from dbo.contracted_items\n\nSELECT count(*) customer_lookup from dbo.customer_lookup\n\nSELECT count(*) stock_on_hand from dbo.stock_on_hand\n\nSELECT count(*) BpartsDetails from stg.BpartsDetails\n\nSELECT count(*) codingline from dbo.codingline\n\nSELECT count(*) Vendor_Contact from dbo.Vendor_Contact\n\nSELECT COUNT(*) Vendor_Contact_Boomi FROM DBO.Vendor_Contact_Boomi\n\nSELECT COUNT(*) ecatalogue from dbo.ecatalogue\n\nselect count(*) DimProduct from dbo.DimProduct\n\nselect count(*) WebHierarchy_Attributes from dbo.WebHierarchy_Attributes"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Script4",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Script3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "INSERT INTO [stg].[NDW_Blackops_Data_Reconciliation](\n[created_date]\n      ,[stibo_parts]\n      ,[vendorparts]\n      ,[vendorparts_attributespivot]\n      ,[vendorparts_assetattributes]\n      ,[customer_specific_parts]\n      ,[contracted_items]\n      ,[customer_lookup]\n      ,[stock_on_hand]\n      ,[BpartsDetails]\n      ,[codingline]\n      ,[Vendor_Contact]\n      ,[Vendor_Contact_Boomi]\n      ,[ecatalogue]\n      ,[DimProduct]\n      ,[WebHierarchy_Attributes]\n)\nvalues( getdate(),\n        @{activity('Script3').output.resultSets[0].rows[0].stibo_parts},\n        @{activity('Script3').output.resultSets[1].rows[0].vendorparts},\n        @{activity('Script3').output.resultSets[2].rows[0].vendorparts_attributespivot},        \n        @{activity('Script3').output.resultSets[3].rows[0].vendorparts_assetattributes},\n        @{activity('Script3').output.resultSets[4].rows[0].customer_specific_parts},\n        @{activity('Script3').output.resultSets[5].rows[0].contracted_items},\n        @{activity('Script3').output.resultSets[6].rows[0].customer_lookup},\n        @{activity('Script3').output.resultSets[7].rows[0].stock_on_hand},        \n        @{activity('Script3').output.resultSets[8].rows[0].BpartsDetails},\n        @{activity('Script3').output.resultSets[9].rows[0].codingline},\n        @{activity('Script3').output.resultSets[10].rows[0].Vendor_Contact},\n        @{activity('Script3').output.resultSets[11].rows[0].Vendor_Contact_Boomi},\n        @{activity('Script3').output.resultSets[12].rows[0].ecatalogue},        \n        @{activity('Script3').output.resultSets[13].rows[0].DimProduct},\n        @{activity('Script3').output.resultSets[14].rows[0].WebHierarchy_Attributes}                         \n)",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/destination_BlackOps')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "WebHierarchy_Attributes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/destination_BlackOps1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "WebHierarchy_Attributes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/destination_BlackOps2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "WebHierarchy_Attributes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blackops_prod')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string"
					},
					"schemaName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "rowno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "empid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ename",
						"type": "varchar"
					},
					{
						"name": "sal",
						"type": "int",
						"precision": 10
					},
					{
						"name": "deptno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "isactive",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "emp"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 1 2 Delta_initial_update_Push')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Stream1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Stream1 End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup_cnt 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(     select Jsonstring from stg.coveopushdata_json_wo_csp_cnt_delta_lookup\n      where batchno=@{int(variables('Stream1'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Intial Load woCspCnt Update Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@variables('Stream1')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Create S3 File Container",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"Accept": "application/json",
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Data To Container",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Create S3 File Container",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup_cnt 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 File Container').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup_cnt 1').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push Data To Container",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File Container').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Intial Load woCspCnt Update Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Push Container to Stream",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CoveoPushData_wo_csp_cnt_Delta_Update_log]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": null,
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 File Container').output.uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@int(variables('Stream1'))",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Push Container to Stream').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set Stream1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1",
							"value": {
								"value": "@pipeline().parameters.start1",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream1 End",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1_End",
							"value": {
								"value": "@pipeline().parameters.end1",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until_Stream2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream2 End",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Stream2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream2')), int(variables('Stream2_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup_cnt 2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(     select Jsonstring from stg.coveopushdata_json_wo_csp_cnt_delta_lookup\n      where batchno=@{int(variables('Stream2'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Stream2 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Intial Load woCspCnt Update Log_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2_Temp",
										"value": {
											"value": "@variables('Stream2')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream2 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream2 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2",
										"value": {
											"value": "@{add(int(variables('Stream2_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Create S3 File Container 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"Accept": "application/json",
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Data To Container 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Create S3 File Container 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup_cnt 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 File Container 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup_cnt 2').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push Data To Container 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File Container 2').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Intial Load woCspCnt Update Log_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Push Container to Stream 2",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CoveoPushData_wo_csp_cnt_Delta_Update_log]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": null,
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 File Container 2').output.uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@int(variables('Stream2'))",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Push Container to Stream 2').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set Stream2",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2",
							"value": {
								"value": "@pipeline().parameters.start2",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2 End",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2_End",
							"value": {
								"value": "@pipeline().parameters.end2",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3",
							"value": {
								"value": "@pipeline().parameters.start3",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3 End",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3_End",
							"value": {
								"value": "@pipeline().parameters.end3",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until_Stream3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream3 End",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Stream3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream3')), int(variables('Stream3_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup_cnt 3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(     select Jsonstring from stg.coveopushdata_json_wo_csp_cnt_delta_lookup\n      where batchno=@{int(variables('Stream3'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Stream3 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Intial Load woCspCnt Update Log_copy2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3_Temp",
										"value": {
											"value": "@variables('Stream3')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream3 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream3 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3",
										"value": {
											"value": "@{add(int(variables('Stream3_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Create S3 File Container 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"Accept": "application/json",
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Data To Container 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Create S3 File Container 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup_cnt 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 File Container 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup_cnt 3').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push Data To Container 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File Container 3').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Intial Load woCspCnt Update Log_copy2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Push Container to Stream 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CoveoPushData_wo_csp_cnt_Delta_Update_log]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": null,
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 File Container 3').output.uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@int(variables('Stream3'))",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Push Container to Stream 3').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream1",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream2",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream3",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"start1": {
						"type": "string"
					},
					"end1": {
						"type": "string"
					},
					"start2": {
						"type": "string"
					},
					"end2": {
						"type": "string"
					},
					"start3": {
						"type": "string"
					},
					"end3": {
						"type": "string"
					},
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String"
					},
					"Stream1_End": {
						"type": "String"
					},
					"Stream1_Temp": {
						"type": "String"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"Stream2": {
						"type": "String"
					},
					"Stream2_End": {
						"type": "String"
					},
					"Stream2_Temp": {
						"type": "String"
					},
					"Stream3": {
						"type": "String"
					},
					"Stream3_End": {
						"type": "String"
					},
					"Stream3_Temp": {
						"type": "String"
					},
					"batchsize": {
						"type": "String",
						"defaultValue": "100"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 1 2 Product_Intial_Load Chnunks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1_Products",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "until1_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "until1_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until1_start')), int(variables('until1_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.uploadURI}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 1').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Lookup 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_wo_csp_cnt\n      where row_no>=@{int(variables('until1_start'))} and \n            row_no<=@{add(int(variables('until1_start')),sub(int(pipeline().parameters.batchsize),1))} and\n            row_no<=@{int(variables('until1_end'))} \n            and is_jsonstring_valid=1 \n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set var temp 1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_json_wo_cnt_csp_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until1_temp",
										"value": {
											"value": "@variables('until1_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_json_wo_cnt_csp_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.logStoredProcedure",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Chunk 1').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until1_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 1').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set var until1 start",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set var temp 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until1_start",
										"value": {
											"value": "@{add(int(variables('until1_temp')),int(pipeline().parameters.batchsize) )}",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until2_Products",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "until2_end",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "until2_start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until2_start')), int(variables('until2_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.uploadURI}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 2').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Lookup 2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_wo_csp_cnt\n      where row_no>=@{int(variables('until2_start'))} and \n            row_no<=@{add(int(variables('until2_start')),sub(int(pipeline().parameters.batchsize),1))} and\n            row_no<=@{int(variables('until2_end'))} \n            and is_jsonstring_valid=1       \n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set var temp 2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_json_wo_cnt_csp_copy1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until2_temp",
										"value": {
											"value": "@variables('until2_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_json_wo_cnt_csp_copy1_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.logStoredProcedure",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Chunk 2').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until2_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 2').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set var until2 start",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set var temp 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until2_start",
										"value": {
											"value": "@{add(int(variables('until2_temp')),int(pipeline().parameters.batchsize) )}",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until3_Products",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "until3_end",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "until3_start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until3_start')), int(variables('until3_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.uploadURI}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 3').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Lookup 3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_wo_csp_cnt\n      where row_no>=@{int(variables('until3_start'))} and \n            row_no<=@{add(int(variables('until3_start')),sub(int(pipeline().parameters.batchsize),1))} and\n            row_no<=@{int(variables('until3_end'))} \n            and is_jsonstring_valid=1       \n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set var temp 3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_json_wo_cnt_csp_copy3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until3_temp",
										"value": {
											"value": "@variables('until3_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_json_wo_cnt_csp_copy3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.logStoredProcedure",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Chunk 3').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until3_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 3').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set var until3 start",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set var temp 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until3_start",
										"value": {
											"value": "@{add(int(variables('until3_temp')),int(pipeline().parameters.batchsize) )}",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "until1_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until1_start",
							"value": {
								"value": "@{activity('Lookup-1').output.firstRow.batch_start}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup-1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select batch_start,batch_end from stg.coveopushdata_initialload_loaddistributor\nwhere id =@{int(pipeline().parameters.param1)}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "until1_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until1_end",
							"value": {
								"value": "@{activity('Lookup-1').output.firstRow.batch_end}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "until2_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until2_start",
							"value": {
								"value": "@{activity('Lookup-2').output.firstRow.batch_start}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "until2_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until2_end",
							"value": {
								"value": "@{activity('Lookup-2').output.firstRow.batch_end}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "until3_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until3_start",
							"value": {
								"value": "@{activity('Lookup-3').output.firstRow.batch_start}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup-3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select batch_start,batch_end from stg.coveopushdata_initialload_loaddistributor\nwhere id =@{int(pipeline().parameters.param3)}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "until3_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until3_end",
							"value": {
								"value": "@{activity('Lookup-3').output.firstRow.batch_end}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup-2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select batch_start,batch_end from stg.coveopushdata_initialload_loaddistributor\nwhere id =@{int(pipeline().parameters.param2)}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Until4_Products",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "until4_end",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "until4_start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until4_start')), int(variables('until4_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 4",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.uploadURI}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 4",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 4",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 4').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 4').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Lookup 4",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_wo_csp_cnt\n      where row_no>=@{int(variables('until4_start'))} and \n            row_no<=@{add(int(variables('until4_start')),sub(int(pipeline().parameters.batchsize),1))} and\n            row_no<=@{int(variables('until4_end'))} \n            and is_jsonstring_valid=1       \n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set var temp 4",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_json_wo_cnt_csp4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until4_temp",
										"value": {
											"value": "@variables('until4_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_json_wo_cnt_csp4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 4",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.logStoredProcedure",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Chunk 4').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until4_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 4').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set var until4 start",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set var temp 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until4_start",
										"value": {
											"value": "@{add(int(variables('until4_temp')),int(pipeline().parameters.batchsize) )}",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Lookup-4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select batch_start,batch_end from stg.coveopushdata_initialload_loaddistributor\nwhere id =@{int(pipeline().parameters.param4)}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "until4_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until4_start",
							"value": {
								"value": "@{activity('Lookup-4').output.firstRow.batch_start}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "until4_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until4_end",
							"value": {
								"value": "@{activity('Lookup-4').output.firstRow.batch_end}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"uploadURI": {
						"type": "string"
					},
					"fileID": {
						"type": "string"
					},
					"batchsize": {
						"type": "string"
					},
					"param1": {
						"type": "string"
					},
					"param2": {
						"type": "string"
					},
					"param3": {
						"type": "string"
					},
					"logStoredProcedure": {
						"type": "string"
					},
					"param4": {
						"type": "string"
					},
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"until1": {
						"type": "String",
						"defaultValue": "10"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"until2": {
						"type": "String",
						"defaultValue": "11"
					},
					"until3": {
						"type": "String",
						"defaultValue": "12"
					},
					"until1_start": {
						"type": "String",
						"defaultValue": "2"
					},
					"until1_end": {
						"type": "String",
						"defaultValue": "10"
					},
					"until2_start": {
						"type": "String",
						"defaultValue": "11"
					},
					"until2_end": {
						"type": "String",
						"defaultValue": "20"
					},
					"until1_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until2_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until3_start": {
						"type": "String",
						"defaultValue": "21"
					},
					"until3_end": {
						"type": "String",
						"defaultValue": "30"
					},
					"until3_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until4": {
						"type": "String"
					},
					"until4_start": {
						"type": "String"
					},
					"until4_end": {
						"type": "String"
					},
					"until4_temp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 2 Availability_Intial_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Availability_1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set until1_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set until1_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until1_start')), int(variables('until1_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.StreamID}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 1').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup 1",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring FROM stg.coveopushdata_availability\nwhere batchno=@{int(variables('until1_start'))}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set Increment 1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_Availability 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until1_temp",
										"value": {
											"value": "@variables('until1_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_Availability 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_CoveoPushData_Availability]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@pipeline().parameters.fileID",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.StreamID",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until1_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Increment 11",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Increment 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until1_start",
										"value": {
											"value": "@{add(int(variables('until1_temp')),1 )}",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Availability_3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set unti3_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set until3_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until3_start')), int(variables('until3_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.StreamID}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 3').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup 3",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(   SELECT  Jsonstring FROM stg.coveopushdata_availability\n    where batchno=@{int(variables('until3_start'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set Increment 3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_Availability 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until3_temp",
										"value": {
											"value": "@variables('until3_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_Availability 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_CoveoPushData_Availability]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@pipeline().parameters.fileID",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.StreamID",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until3_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Increment 33",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Increment 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until3_start",
										"value": {
											"value": "@{add(int(variables('until3_temp')),1 )}",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Availability_2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set until2_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set until2_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until2_start')), int(variables('until2_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.StreamID}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 2').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup 2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(   SELECT  Jsonstring FROM stg.coveopushdata_availability\n    where batchno=@{int(variables('until2_start'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set Increment 2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_Availability 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until2_temp",
										"value": {
											"value": "@variables('until2_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_Availability 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_CoveoPushData_Availability]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@pipeline().parameters.fileID",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.StreamID",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until2_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Increment 22",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Increment 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until2_start",
										"value": {
											"value": "@{add(int(variables('until2_temp')),1 )}",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Availability_4",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set until4_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set until4_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until4_start')), int(variables('until4_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 4",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.StreamID}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 4",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 4').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 4').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup 4",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(   SELECT  Jsonstring FROM stg.coveopushdata_availability\n    where batchno=@{int(variables('until4_start'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set Increment 4",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_Availability 4",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk Push 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until4_temp",
										"value": {
											"value": "@variables('until4_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_Availability 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_CoveoPushData_Availability]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@pipeline().parameters.fileID",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.StreamID",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until4_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Increment 44",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Increment 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until4_start",
										"value": {
											"value": "@{add(int(variables('until4_temp')),1 )}",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Availability Get max batchno",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(batchno) max_batchno \nfrom stg.coveopushdata_availability",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set temp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Availability Get max batchno",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "temp",
							"value": {
								"value": "@{div(int(activity('Availability Get max batchno').output.firstRow.max_batchno),4)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until1_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until1_start",
							"value": "1"
						}
					},
					{
						"name": "Set until1_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until1_end",
							"value": {
								"value": "@variables('temp')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until2_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until2_start",
							"value": {
								"value": "@{add(int(variables('temp')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until2_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until2_end",
							"value": {
								"value": "@{mul(int(variables('temp')),2)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set unti3_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until3_start",
							"value": {
								"value": "@{add(mul(int(variables('temp')),2),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until3_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until3_end",
							"value": {
								"value": "@{mul(int(variables('temp')),3)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until4_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until4_start",
							"value": {
								"value": "@{add(mul(int(variables('temp')),3),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until4_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until4_end",
							"value": {
								"value": "@{activity('Availability Get max batchno').output.firstRow.max_batchno}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"StreamID": {
						"type": "string"
					},
					"fileID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"until1_start": {
						"type": "String",
						"defaultValue": "2"
					},
					"until1_end": {
						"type": "String",
						"defaultValue": "13"
					},
					"until2_start": {
						"type": "String",
						"defaultValue": "14"
					},
					"until2_end": {
						"type": "String",
						"defaultValue": "26"
					},
					"until1_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until2_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until3_start": {
						"type": "String",
						"defaultValue": "27"
					},
					"until3_end": {
						"type": "String",
						"defaultValue": "40"
					},
					"until3_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until4_start": {
						"type": "String",
						"defaultValue": "41"
					},
					"until4_temp": {
						"type": "String"
					},
					"until4_end": {
						"type": "String",
						"defaultValue": "54"
					},
					"temp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 2 Delta_initial_load_Delete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_cnt 1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select '{\"documentId\":\"product://'+product_id+'\"}' JSONSTRING from stg.coveopushdata_json_wo_csp_cnt_delta_delete\nwhere row_no<=@{int(variables('count'))} ) a\nselect @json as Jsonstring",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Create S3 File Container",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Lookup_cnt 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json",
								"Accept": "application/json",
								"Authorization": {
									"value": "Bearer @{pipeline().parameters.BearerKey}",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@variables('empty_body')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Push Data To Container",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Create S3 File Container",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@activity('Create S3 File Container').output.uploadURI",
								"type": "Expression"
							},
							"method": "PUT",
							"headers": {
								"x-amz-server-side-encryption": "AES256",
								"Content-Type": "application/octet-stream"
							},
							"body": {
								"value": "@concat('{\"delete\": [',activity('Lookup_cnt 1').output.FirstRow.JSONSTRING,']}')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Push Container to Stream",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Push Data To Container",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File Container').output.fileid}",
								"type": "Expression"
							},
							"method": "PUT",
							"headers": {
								"Authorization": {
									"value": "Bearer @{pipeline().parameters.BearerKey}",
									"type": "Expression"
								},
								"Content-Type": "application/json"
							},
							"body": {
								"value": "@variables('empty_body')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup_cnt 1_copy1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select count(*) cnt from stg.coveopushdata_json_wo_csp_cnt_delta_delete\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt 1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "count",
							"value": {
								"value": "@{int(activity('Lookup_cnt 1_copy1').output.firstRow.cnt)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Intial Load woCspCnt Delete Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Push Container to Stream",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_wo_csp_cnt_Delta_delete_log]",
							"storedProcedureParameters": {
								"AWSContainerFileID": {
									"value": null,
									"type": "String"
								},
								"AWSUploadURI": {
									"value": {
										"value": "@activity('Create S3 File Container').output.uploaduri",
										"type": "Expression"
									},
									"type": "String"
								},
								"BAtchNoStart": {
									"value": {
										"value": "@int(variables('count'))",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"PipelineID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Push Container to Stream').Error?.Message",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"count": {
						"type": "String"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 3 BPart_Product_Intial_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1_Products",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "until1_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "until1_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until1_start')), int(variables('until1_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.uploadURI}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup4",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup4').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup4",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring FROM stg.CoveoPushData_json_bpart_lookup_group\nWhere batchno=@{int(variables('until1_start'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set temp1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Bpart log1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until1_temp",
										"value": {
											"value": "@variables('until1_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Increment_Newbatchno1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set temp1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until1_start",
										"value": {
											"value": "@{add(int(variables('until1_temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Bpart log1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[bpart_Coveopushdata_log1]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Chunk1').output.fileID",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until1_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "until1_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until1_start",
							"value": {
								"value": "@{activity('Lookup-1').output.firstRow.batch_start}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup-1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select batch_start,batch_end from stg.bpart_loadbalancer\nwhere id =@{int(variables('until1'))}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "until1_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until1_end",
							"value": {
								"value": "@{activity('Lookup-1').output.firstRow.batch_end}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "until2_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until2_start",
							"value": {
								"value": "@{activity('Lookup-2').output.firstRow.batch_start}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup-2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select batch_start,batch_end from stg.bpart_loadbalancer\nwhere id =@{int(variables('until2'))}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "until2_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until2_end",
							"value": {
								"value": "@{activity('Lookup-2').output.firstRow.batch_end}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "until3_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until3_start",
							"value": {
								"value": "@{activity('Lookup-3').output.firstRow.batch_start}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup-3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select batch_start,batch_end from stg.bpart_loadbalancer\nwhere id =@{int(variables('until3'))}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "until3_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until3_end",
							"value": {
								"value": "@{activity('Lookup-3').output.firstRow.batch_end}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "declare @maxvalue int;\ntruncate table stg.bpart_loadbalancer;\n\nset @maxvalue =(select coalesce(max(batchno),0) from stg.CoveoPushData_Json_BPart_Lookup_group)\n\ninsert into stg.bpart_loadbalancer values(1,1,@maxvalue/3,GETDATE()),\n(2,(@maxvalue/3)+1,2*(@maxvalue/3),GETDATE()),\n(3,(2*(@maxvalue/3))+1,@maxvalue,GETDATE())",
										"type": "Expression"
									}
								}
							]
						}
					},
					{
						"name": "Until2_Products",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "until2_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "until2_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until2_start')), int(variables('until2_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup2').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring FROM stg.CoveoPushData_json_bpart_lookup_group\nWhere batchno=@{int(variables('until2_start'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set temp2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Bpart log2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until2_temp",
										"value": {
											"value": "@variables('until2_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Increment_Newbatchno2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set temp2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until2_start",
										"value": {
											"value": "@{add(int(variables('until2_temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Bpart log2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[bpart_Coveopushdata_log2]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Chunk2').output.fileid",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until2_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push 2').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Chunk2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.uploadURI}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until3_Products",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "until3_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "until3_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until3_start')), int(variables('until3_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.uploadURI}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup3').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring FROM stg.CoveoPushData_json_bpart_lookup_group\nWhere batchno=@{int(variables('until3_start'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set temp3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Bpart log3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until3_temp",
										"value": {
											"value": "@variables('until3_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Increment_Newbatchno3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set temp3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until3_start",
										"value": {
											"value": "@{add(int(variables('until3_temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Bpart log3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[bpart_Coveopushdata_log3]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Chunk3').output.fileid",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until3_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push 3').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"UploadURI": {
						"type": "string"
					},
					"Fileid": {
						"type": "string"
					},
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"until1": {
						"type": "String",
						"defaultValue": "1"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"until2": {
						"type": "String",
						"defaultValue": "2"
					},
					"until3": {
						"type": "String",
						"defaultValue": "3"
					},
					"until1_start": {
						"type": "String",
						"defaultValue": "2"
					},
					"until1_end": {
						"type": "String",
						"defaultValue": "10"
					},
					"until2_start": {
						"type": "String",
						"defaultValue": "11"
					},
					"until2_end": {
						"type": "String",
						"defaultValue": "20"
					},
					"until1_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until2_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until3_start": {
						"type": "String",
						"defaultValue": "21"
					},
					"until3_end": {
						"type": "String",
						"defaultValue": "30"
					},
					"until3_temp": {
						"type": "String",
						"defaultValue": "1"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 3 Delta_initial_load_Add')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Stream1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set stream1 End",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup_cnt 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_wo_csp_cnt_delta_add\nwhere row_no>=@{int(variables('Stream1'))} and \n      row_no<=@{add(int(variables('Stream1')),499)} ) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Intial Load woCspCnt Add Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@variables('Stream1')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),500)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Create S3 File Container",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"Accept": "application/json",
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@{variables('empty_body')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Data To Container",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Create S3 File Container",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup_cnt 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 File Container').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"addOrUpdate\": [',activity('Lookup_cnt 1').output.FirstRow.Jsonstring,']}')\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push Data To Container",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File Container').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Intial Load woCspCnt Add Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Push Container to Stream",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CoveoPushData_wo_csp_cnt_Delta_add_log]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": null,
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 File Container').output.uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@int(variables('Stream1'))",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Push Container to Stream').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Lookup_cnt Add",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select count(*) cnt from stg.coveopushdata_json_wo_csp_cnt_delta_add",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set stream1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt Add",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1",
							"value": "1"
						}
					},
					{
						"name": "Set stream1 End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt Add",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1_End",
							"value": {
								"value": "@{int(activity('Lookup_cnt Add').output.firstRow.cnt)}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_End": {
						"type": "String",
						"defaultValue": "2452"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 4 2 Delta_Bpart_Delete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Create S3 File Container",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json",
								"Accept": "application/json",
								"Authorization": {
									"value": "Bearer @{pipeline().parameters.BearerKey}",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@variables('empty_body')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Push Data To Container",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Lookup grouping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@activity('Create S3 File Container').output.uploadURI",
								"type": "Expression"
							},
							"method": "PUT",
							"headers": {
								"x-amz-server-side-encryption": "AES256",
								"Content-Type": "application/octet-stream"
							},
							"body": {
								"value": "@concat('{\"delete\": [',activity('Lookup grouping').output.FirstRow.JSONSTRING,']}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Push Container to Stream",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Push Data To Container",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File Container').output.fileid}",
								"type": "Expression"
							},
							"method": "PUT",
							"headers": {
								"Authorization": {
									"value": "Bearer @{pipeline().parameters.BearerKey}",
									"type": "Expression"
								},
								"Content-Type": "application/json"
							},
							"body": {
								"value": "@variables('empty_body')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup grouping",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Create S3 File Container",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select  JSONSTRING \nfrom stg.coveopushdata_json_BPart_Delta_Delete\n ) a\nselect @json as Jsonstring",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Intial Load woCspCnt Update Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Push Container to Stream",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_bpart_Delta_delete_log]",
							"storedProcedureParameters": {
								"AWSContainerFileID": {
									"value": null,
									"type": "String"
								},
								"AWSUploadURI": {
									"value": {
										"value": "@activity('Create S3 File Container').output.uploaduri",
										"type": "Expression"
									},
									"type": "String"
								},
								"BAtchNoStart": {
									"value": "1",
									"type": "Int32"
								},
								"PipelineID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Push Container to Stream').Error?.Message",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"OrganizationID": {
						"type": "string",
						"defaultValue": "blackwoodsnonproduction1rel4b8ue"
					},
					"SourceID": {
						"type": "string",
						"defaultValue": "xqzjpr66aahsdkjh6go4dycoca"
					},
					"BearerKey": {
						"type": "string",
						"defaultValue": "xxfad91265-b288-47b9-a932-2145f82f1611"
					}
				},
				"variables": {
					"count": {
						"type": "String"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 4 Error Records Reconciliation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select batchno from stg.coveopushdata_wo_csp_cnt_web_log1 where errormessage like 'The%'\nunion\nselect batchno from stg.coveopushdata_wo_csp_cnt_web_log2 where errormessage like 'The%'\nunion\nselect batchno from stg.coveopushdata_wo_csp_cnt_web_log3 where errormessage like 'The%'\nunion\nselect batchno from stg.coveopushdata_wo_csp_cnt_web_log4 where errormessage like 'The%'\nunion\nselect batchno from stg.coveopushdata_wo_csp_cnt_web_log5 where errormessage like 'The%'\nunion\nselect batchno from stg.coveopushdata_wo_csp_cnt_web_log6 where errormessage like 'The%'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_blackops_prod",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "na",
									"schemaName": "na"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrgID}/sources/@{pipeline().parameters.OrgID}-@{pipeline().parameters.SrcID}/stream/@{pipeline().parameters.streamid}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BeaereKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 1').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Lookup 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_wo_csp_cnt\n      where row_no>=@{item().batchno} and \n            row_no<=@{add(item().batchno,49)}\n            and is_jsonstring_valid=1 \n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Coveo Stream Chunk 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrgID}/sources/@{pipeline().parameters.OrgID}-@{pipeline().parameters.SrcID}/stream/@{pipeline().parameters.streamid}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BeaereKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 2').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Lookup 2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_wo_csp_cnt\n      where row_no>=@{add(item().batchno,50)} and \n            row_no<=@{add(item().batchno,99)}\n            and is_jsonstring_valid=1 \n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								},
								{
									"name": "Wait2",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Wait3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"OrgID": {
						"type": "string"
					},
					"SrcID": {
						"type": "string"
					},
					"BeaereKey": {
						"type": "string"
					},
					"streamid": {
						"type": "string"
					}
				},
				"variables": {
					"First": {
						"type": "String"
					},
					"Second": {
						"type": "String"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blackops_prod')]",
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 5 Delta_Availability')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Availability_1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set until1_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set until1_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until1_start')), int(variables('until1_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Create S3 file container 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push data to S3 container 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 file container 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 1').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup 1",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Create S3 file container 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(   SELECT  Jsonstring FROM stg.coveopushdata_availability\n    where batchno=@{int(variables('until1_start'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set Increment 1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_Availability 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Push Container to Stream 1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until1_temp",
										"value": {
											"value": "@variables('until1_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_Availability 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_CoveoPushData_Availability]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Create S3 file container 1').output.fileid",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 file container 1').output.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until1_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Increment 11",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Increment 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until1_start",
										"value": {
											"value": "@{add(int(variables('until1_temp')),1 )}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push data to S3 container 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 file container 1').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Availability Get max batchno",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(batchno) max_batchno \nfrom stg.coveopushdata_availability",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set temp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Availability Get max batchno",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "temp",
							"value": {
								"value": "@{div(int(activity('Availability Get max batchno').output.firstRow.max_batchno),3)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until1_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until1_start",
							"value": "1"
						}
					},
					{
						"name": "Set until1_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until1_end",
							"value": {
								"value": "@variables('temp')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until2_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until2_start",
							"value": {
								"value": "@{add(int(variables('temp')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until2_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until2_end",
							"value": {
								"value": "@{mul(int(variables('temp')),2)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set unti3_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until3_start",
							"value": {
								"value": "@{add(mul(int(variables('temp')),2),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until3_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until3_end",
							"value": {
								"value": "@{activity('Availability Get max batchno').output.firstRow.max_batchno}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until_Availability_2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set until2_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set until2_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until2_start')), int(variables('until2_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Create S3 file container 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push data to S3 container 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 file container 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 2').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup 2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Create S3 file container 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(   SELECT  Jsonstring FROM stg.coveopushdata_availability\n    where batchno=@{int(variables('until2_start'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set Increment 2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_Availability 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Push Container to Stream 2",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until2_temp",
										"value": {
											"value": "@variables('until2_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_Availability 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_CoveoPushData_Availability]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Create S3 file container 2').output.fileid",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 file container 2').output.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until2_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Increment 22",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Increment 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until2_start",
										"value": {
											"value": "@{add(int(variables('until2_temp')),1 )}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push data to S3 container 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 file container 2').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Availability_3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set unti3_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set until3_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until3_start')), int(variables('until3_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Create S3 file container 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push data to S3 container 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 file container 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 3').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup 3",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Create S3 file container 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(   SELECT  Jsonstring FROM stg.coveopushdata_availability\n    where batchno=@{int(variables('until3_start'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set Increment 3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_Availability 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Push Container to Stream 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until3_temp",
										"value": {
											"value": "@variables('until3_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_Availability 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_CoveoPushData_Availability]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Create S3 file container 3').output.fileid",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 file container 3').output.uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until3_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Increment 33",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Increment 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until3_start",
										"value": {
											"value": "@{add(int(variables('until3_temp')),1 )}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push data to S3 container 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 file container 3').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"until1_start": {
						"type": "String",
						"defaultValue": "2"
					},
					"until1_end": {
						"type": "String",
						"defaultValue": "13"
					},
					"until2_start": {
						"type": "String",
						"defaultValue": "14"
					},
					"until2_end": {
						"type": "String",
						"defaultValue": "26"
					},
					"until1_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until2_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until3_start": {
						"type": "String",
						"defaultValue": "27"
					},
					"until3_end": {
						"type": "String",
						"defaultValue": "40"
					},
					"until3_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until4_start": {
						"type": "String",
						"defaultValue": "41"
					},
					"until4_temp": {
						"type": "String"
					},
					"until4_end": {
						"type": "String",
						"defaultValue": "54"
					},
					"temp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 1 Delta_Partial_BOPS_Push_call')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get rows count Add Update Delete",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select max(row_no) cnt from stg.coveopushdata_json_bops_partial_Delta_update_Add",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set stream1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get rows count Add Update Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1",
							"value": "1"
						}
					},
					{
						"name": "Set stream1 End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get rows count Add Update Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1_End",
							"value": {
								"value": "@{activity('Get rows count Add Update Delete').output.firstRow.cnt}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until_Stream",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set stream1 End",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_bops_partial_Delta_update_Add\nwhere row_no>=@{int(variables('Stream1'))} and \n      row_no<=@{add(int(variables('Stream1')),99)}\n      ) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Push Data To Container 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@{variables('Stream1')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),100)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Create S3 File Container 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"Accept": "application/json",
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@{variables('empty_body')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Data To Container 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Create S3 File Container 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 File Container 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup').output.FirstRow.Jsonstring,']}')\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push Data To Container 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File Container 2').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"OrganizationID": {
						"type": "string",
						"defaultValue": "blackwoodsnonproduction18ywd51dd"
					},
					"SourceID": {
						"type": "string",
						"defaultValue": "wfprngzh3psutpsinc7po7sl4u"
					},
					"BearerKey": {
						"type": "string",
						"defaultValue": "xxe4ddf465-208c-4042-951f-6a4e4339fa46"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String"
					},
					"Stream1_End": {
						"type": "String"
					},
					"Stream1_Temp": {
						"type": "String"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 Coveo_Bops_partilal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Stream1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_Bops 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_Bops 1').output.FirstRow.Js1,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_Bops 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js1 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream1'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream1_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 1",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@variables('Stream1')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream1_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_coveopushdata_json_Bops_stream]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream1'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}\n",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 1').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream2')), int(variables('Stream2_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_Bops 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_bops 2').output.FirstRow.Js2,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_Bops 2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js2 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream2'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Stream2 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream2_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 2",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2_Temp",
										"value": {
											"value": "@variables('Stream2')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream2 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream2 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2",
										"value": {
											"value": "@{add(int(variables('Stream2_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream2_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_coveopushdata_json_Bops_stream]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 2').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 2').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream2'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 2').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream3_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream3')), int(variables('Stream3_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_Bops 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_Bops 3').output.FirstRow.Js3,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_Bops 3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js3 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream3'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Stream3 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 3",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3_Temp",
										"value": {
											"value": "@variables('Stream3')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream3 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream3 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3",
										"value": {
											"value": "@{add(int(variables('Stream3_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_coveopushdata_json_Bops_stream]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream3'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 3').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set Stream1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1",
							"value": {
								"value": "1",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup_cnt",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT  max(batchno) maxBatchno  FROM stg.Coveopushdata_json_Bops_lookup",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Stream1_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream1')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Temp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Temp",
							"value": {
								"value": "@{div(activity('Lookup_cnt').output.value[0].maxBatchno,3)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2",
							"value": {
								"value": "@{add(int(variables('Stream1_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream2')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3",
							"value": {
								"value": "@{add(int(variables('Stream2_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream3')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_End": {
						"type": "String",
						"defaultValue": "100"
					},
					"Stream2": {
						"type": "String",
						"defaultValue": "101"
					},
					"Stream2_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream2_End": {
						"type": "String",
						"defaultValue": "200"
					},
					"Stream3": {
						"type": "String",
						"defaultValue": "201"
					},
					"Stream3_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream3_End": {
						"type": "String",
						"defaultValue": "300"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"Table_name": {
						"type": "String",
						"defaultValue": "stg.CoveoPushData_json_Bops_lookup"
					},
					"Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Source": {
						"type": "String",
						"defaultValue": "xqzjpr66aahsdkjh6go4dycoca"
					},
					"id": {
						"type": "String",
						"defaultValue": "3"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 Coveo_CNT_partilal_PUSH_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Stream1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 1').output.FirstRow.Js1,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js1 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream1'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream1_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@variables('Stream1')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 1",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream1_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.StoredProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream1'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 1').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 1').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream2')), int(variables('Stream2_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 2').output.FirstRow.Js2,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js2 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream2'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Stream2 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream2_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2_Temp",
										"value": {
											"value": "@variables('Stream2')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream2 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream2 var",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 2",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2",
										"value": {
											"value": "@{add(int(variables('Stream2_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream2_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.StoredProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 2').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 2').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream2'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 2').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 2').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream3_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream3')), int(variables('Stream3_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 3').output.FirstRow.Js3,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js3 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream3'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Stream3 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3_Temp",
										"value": {
											"value": "@variables('Stream3')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream3 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream3 var",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 3",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3",
										"value": {
											"value": "@{add(int(variables('Stream3_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.StoredProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream3'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"Errormessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 3').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 3').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set Stream1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1",
							"value": {
								"value": "@{activity('Lookup_cnt').output.value[0].srt_value}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup_cnt",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set TableName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT  *  FROM stg.cnt_loaddistributor where id = @{int(pipeline().parameters.id)}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Stream1_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream1')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Temp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Temp",
							"value": {
								"value": "@{div(add(sub(activity('Lookup_cnt').output.value[0].end_value,activity('Lookup_cnt').output.value[0].srt_value),1),9)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2",
							"value": {
								"value": "@{add(int(variables('Stream1_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream2')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3",
							"value": {
								"value": "@{add(int(variables('Stream2_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream3')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set TableName",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Table_name",
							"value": {
								"value": "@pipeline().parameters.Table_name",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					},
					"Table_name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"StoredProcedureName": {
						"type": "string"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_End": {
						"type": "String",
						"defaultValue": "100"
					},
					"Stream2": {
						"type": "String",
						"defaultValue": "101"
					},
					"Stream2_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream2_End": {
						"type": "String",
						"defaultValue": "200"
					},
					"Stream3": {
						"type": "String",
						"defaultValue": "201"
					},
					"Stream3_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream3_End": {
						"type": "String",
						"defaultValue": "300"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"Table_name": {
						"type": "String",
						"defaultValue": "stg.CoveoPushData_json_cnt_lookup3"
					},
					"Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Source": {
						"type": "String",
						"defaultValue": "xqzjpr66aahsdkjh6go4dycoca"
					},
					"id": {
						"type": "String",
						"defaultValue": "3"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 Coveo_CNT_partilal_PUSH_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Stream1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 1').output.FirstRow.Js1,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js1 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream1'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream1_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@variables('Stream1')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 1",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream1_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.StoredProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream1'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push 1').Error?.message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 1').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream2')), int(variables('Stream2_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 2').output.FirstRow.Js2,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js2 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream2'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Stream2 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream2_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2_Temp",
										"value": {
											"value": "@variables('Stream2')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream2 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream2 var",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 2",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2",
										"value": {
											"value": "@{add(int(variables('Stream2_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream2_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.StoredProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 2').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 2').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream2'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 2').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 2').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream3_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream3')), int(variables('Stream3_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 3').output.FirstRow.Js3,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js3 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream3'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Stream3 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3_Temp",
										"value": {
											"value": "@variables('Stream3')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream3 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream3 var",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 3",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3",
										"value": {
											"value": "@{add(int(variables('Stream3_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.StoredProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream3'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 3').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 3').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set Stream1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1",
							"value": {
								"value": "@{add(mul(3,int(variables('Temp'))),activity('Lookup_cnt').output.value[0].srt_value)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup_cnt",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set TableName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT  *  FROM stg.cnt_loaddistributor where id = @{int(pipeline().parameters.id)}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Stream1_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream1')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Temp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Temp",
							"value": {
								"value": "@{div(add(sub(activity('Lookup_cnt').output.value[0].end_value,activity('Lookup_cnt').output.value[0].srt_value),1),9)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2",
							"value": {
								"value": "@{add(int(variables('Stream1_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream2')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3",
							"value": {
								"value": "@{add(int(variables('Stream2_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream3')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set TableName",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Table_name",
							"value": {
								"value": "@pipeline().parameters.Table_name",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					},
					"Table_name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"StoredProcedureName": {
						"type": "string"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_End": {
						"type": "String",
						"defaultValue": "100"
					},
					"Stream2": {
						"type": "String",
						"defaultValue": "101"
					},
					"Stream2_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream2_End": {
						"type": "String",
						"defaultValue": "200"
					},
					"Stream3": {
						"type": "String",
						"defaultValue": "201"
					},
					"Stream3_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream3_End": {
						"type": "String",
						"defaultValue": "300"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"Table_name": {
						"type": "String",
						"defaultValue": "stg.CoveoPushData_json_cnt_lookup3"
					},
					"Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Source": {
						"type": "String",
						"defaultValue": "xqzjpr66aahsdkjh6go4dycoca"
					},
					"id": {
						"type": "String",
						"defaultValue": "3"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		}
	]
}