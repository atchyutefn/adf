{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"AECPAABLACKOPSP01": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/1 Push Data to Coveo - Main ADF Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is the pipeline to trigger first for Full load.",
				"activities": [
					{
						"name": "Step1-Load_CoveoPushData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Load_CoveoPushData]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Step2-Json_WO_CSP_CNT_BOPS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Step1-Load_CoveoPushData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_WO_CSP_CNT]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Step2-Json_Bops_Partial",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Step2-Json_WO_CSP_CNT_BOPS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_Bops_Partial]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Initial Load Pipeline Call",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Step2-Json_WO_CSP_CNT_BOPS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "3 BPart JSON Grouping",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Step1-Load_CoveoPushData_Availability",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 Initial Load - Coveo BWProducts Parallel_Chunks_v1_90",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@variables('Organization id')",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@variables('Source id')",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@variables('BearerKey')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Wait 60min after Initial load",
						"description": "To prepare index at Coveo, Wait 60 minutes. This time depends on size of data pushing.",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Initial Load Pipeline Call",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5400
						}
					},
					{
						"name": "Step3-Json_Bops_Partial_MaxPayload",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Step2-Json_Bops_Partial",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stg].[CoveoPushData_JSON_Bops_Max_Payload]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Bops data Push to Coveo",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait 60min after Initial load",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Bops Lookup Table Preparation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_Bops_partilal",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@variables('Organization id')",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@variables('Source id')",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@variables('BearerKey')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Bops Lookup Table Preparation",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Step3-Json_Bops_Partial_MaxPayload",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_Bops_lookup]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CNT JSON Preparation 1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Script2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_CNT_Partial_1]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CNT JSON Maxpayload 1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CNT JSON Preparation 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stg].[CoveoPushData_JSON_cnt_Max_Payload_1]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP CNT Lookup 1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CNT JSON Maxpayload 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_cnt_lookup1]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Script2",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Step2-Json_WO_CSP_CNT_BOPS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "truncate table stg.cnt_loaddistributor"
								}
							]
						}
					},
					{
						"name": "CNT JSON Preparation 2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Script2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_CNT_Partial_2]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CNT JSON Maxpayload 2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CNT JSON Preparation 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stg].[CoveoPushData_JSON_cnt_Max_Payload_2]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP CNT Lookup 2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CNT JSON Maxpayload 2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_cnt_lookup2]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Partial Push CNT 2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SP CNT Lookup 2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Wait 60min after Initial load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_CNT_partial_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@variables('Organization id')",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@variables('Source id')",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@variables('BearerKey')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CNT JSON Preparation 3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Script2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_CNT_Partial_3]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CNT JSON Maxpayload 3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CNT JSON Preparation 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stg].[CoveoPushData_JSON_cnt_Max_Payload_3]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP CNT Lookup 3",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CNT JSON Maxpayload 3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_cnt_lookup3]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Partial Push CNT 3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SP CNT Lookup 3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Wait 60min after Initial load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_CNT_partial_3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@variables('Organization id')",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@variables('Source id')",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@variables('BearerKey')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Partial Push CNT 1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SP CNT Lookup 1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Wait 60min after Initial load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_CNT_partial_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationId": {
									"value": "@variables('Organization id')",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@variables('Source id')",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@variables('BearerKey')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CNT JSON Preparation 4",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Script2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_CNT_Partial_4]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CNT JSON Maxpayload 4",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CNT JSON Preparation 4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stg].[CoveoPushData_JSON_cnt_Max_Payload_4]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP CNT Lookup 4",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CNT JSON Maxpayload 4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_cnt_lookup4]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Partial Push CNT 4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SP CNT Lookup 4",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Wait 60min after Initial load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_CNT_partial_4",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@variables('Organization id')",
									"type": "Expression"
								},
								"SoruceID": {
									"value": "@variables('Source id')",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@variables('BearerKey')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "1 BPart Products Preparation",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_BPart_Lookup]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "1 BPart JSON preparation",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_BPart]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "2 BPart JSON MaxPayload Preparation",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "1 BPart JSON preparation",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "1 BPart Products Preparation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_JSON_BPart_Max_Payload]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "3 BPart JSON Grouping",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "2 BPart JSON MaxPayload Preparation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_BPart_lookup_group]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Step1-Load_CoveoPushData_Availability",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Load_CoveoPushData_availability]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Error Mail Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Initial Load Pipeline Call",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-14.southeastasia.logic.azure.com:443/workflows/b5dccf7903484ee1b6c772c3a8aa0f51/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=uhVEhHPsZNiltHdyvFv5ZGDfRXHequxZ6hM7Dvt0QIw",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n    \"ADFName\":\"@{pipeline().DataFactory}\",\n    \"ErrorMessage\":\"@{activity('Initial Load Pipeline Call').Error.Message}\",\n    \"PipelineName\":\"@{pipeline().Pipeline}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Error Mail Notification_CNT1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Partial Push CNT 1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-14.southeastasia.logic.azure.com:443/workflows/b5dccf7903484ee1b6c772c3a8aa0f51/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=uhVEhHPsZNiltHdyvFv5ZGDfRXHequxZ6hM7Dvt0QIw",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n    \"ADFName\":\"@{pipeline().DataFactory}\",\n    \"ErrorMessage\":\"@{activity('Partial Push CNT 1').Error.Message}\",\n    \"PipelineName\":\"@{pipeline().Pipeline}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Error Mail Notification_CNT 2",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Partial Push CNT 2",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-14.southeastasia.logic.azure.com:443/workflows/b5dccf7903484ee1b6c772c3a8aa0f51/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=uhVEhHPsZNiltHdyvFv5ZGDfRXHequxZ6hM7Dvt0QIw",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n    \"ADFName\":\"@{pipeline().DataFactory}\",\n    \"ErrorMessage\":\"@{activity('Partial Push CNT 2').Error.Message}\",\n    \"PipelineName\":\"@{pipeline().Pipeline}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Error Mail Notification_CNT 3",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Partial Push CNT 3",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-14.southeastasia.logic.azure.com:443/workflows/b5dccf7903484ee1b6c772c3a8aa0f51/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=uhVEhHPsZNiltHdyvFv5ZGDfRXHequxZ6hM7Dvt0QIw",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n    \"ADFName\":\"@{pipeline().DataFactory}\",\n    \"ErrorMessage\":\"@{activity('Partial Push CNT 3').Error.Message}\",\n    \"PipelineName\":\"@{pipeline().Pipeline}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Error Mail Notification_CNT 4",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Partial Push CNT 4",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-14.southeastasia.logic.azure.com:443/workflows/b5dccf7903484ee1b6c772c3a8aa0f51/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=uhVEhHPsZNiltHdyvFv5ZGDfRXHequxZ6hM7Dvt0QIw",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n    \"ADFName\":\"@{pipeline().DataFactory}\",\n    \"ErrorMessage\":\"@{activity('Partial Push CNT 4').Error.Message}\",\n    \"PipelineName\":\"@{pipeline().Pipeline}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Error Mail Notification_BOPS",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Bops data Push to Coveo",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-14.southeastasia.logic.azure.com:443/workflows/b5dccf7903484ee1b6c772c3a8aa0f51/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=uhVEhHPsZNiltHdyvFv5ZGDfRXHequxZ6hM7Dvt0QIw",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n    \"ADFName\":\"@{pipeline().DataFactory}\",\n    \"ErrorMessage\":\"@{activity('Bops data Push to Coveo').Error.Message}\",\n    \"PipelineName\":\"@{pipeline().Pipeline}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"Organization id": {
						"type": "String",
						"defaultValue": "blackwoodsproductiondb4f7vq2"
					},
					"Source id": {
						"type": "String",
						"defaultValue": "skmopt6atrldmbcplagqyg2kqa"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"BearerKey": {
						"type": "String",
						"defaultValue": "xx1b9103ee-5ac4-4917-a945-66f5b26def8b"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/2 1 Initial Load - Coveo BWProducts Parallel_Chunks_v1_90')]",
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_Bops_partilal')]",
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_CNT_partial_2')]",
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_CNT_partial_3')]",
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_CNT_partial_1')]",
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_CNT_partial_4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 1 Initial Load - Coveo BWProducts Parallel_Chunks_v1_90')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Coveo Stream Open Initial Load",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Truncate logs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/open\n",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "Bearer @{pipeline().parameters.BearerKey}",
									"type": "Expression"
								},
								"Content-Type": "application/json",
								"Accept": "application/json"
							},
							"body": {
								"value": "@variables('empty_body')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup-1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Coveo Stream Open Initial Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) \nFROM (      select Jsonstring from stg.coveopushdata_json_wo_csp_cnt\n            where row_no>=1 and \n                  row_no<=100\n                  and is_jsonstring_valid=1\n      ) a\nselect @json as Jsonstring",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Coveo Push",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Lookup-1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@activity('Coveo Stream Open Initial Load').output.uploadURI",
								"type": "Expression"
							},
							"method": "PUT",
							"headers": {
								"x-amz-server-side-encryption": "AES256",
								"Content-Type": "application/octet-stream"
							},
							"body": {
								"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup-1').output.firstRow.Jsonstring,\n']}')",
								"type": "Expression"
							},
							"httpRequestTimeout": "00:10:00"
						}
					},
					{
						"name": "Product Intial Load 1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "1",
								"param2": "2",
								"param3": "3",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log1]",
								"param4": "4",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Load Distributor",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SP_Update_Coveopushdata_json_wo_cnt_csp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[coveopushdata_initialload_loaddistributor]",
							"storedProcedureParameters": {
								"parallelstreams": {
									"value": "80",
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Product Intial Load 2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "5",
								"param2": "6",
								"param3": "7",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log1]",
								"param4": "8",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "9",
								"param2": "10",
								"param3": "11",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log1]",
								"param4": "12",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 4",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "13",
								"param2": "14",
								"param3": "15",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log1]",
								"param4": "16",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 5",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "17",
								"param2": "18",
								"param3": "19",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log2]",
								"param4": "20",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 8",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "29",
								"param2": "30",
								"param3": "31",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log2]",
								"param4": "32",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 7",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "25",
								"param2": "26",
								"param3": "27",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log2]",
								"param4": "28",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 6",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "21",
								"param2": "22",
								"param3": "23",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log2]",
								"param4": "24",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 12",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "45",
								"param2": "46",
								"param3": "47",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log3]",
								"param4": "48",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 11",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "41",
								"param2": "42",
								"param3": "43",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log3]",
								"param4": "44",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 10",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "37",
								"param2": "38",
								"param3": "39",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log3]",
								"param4": "40",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 9",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "33",
								"param2": "34",
								"param3": "35",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log3]",
								"param4": "36",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 15",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "57",
								"param2": "58",
								"param3": "59",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log4]",
								"param4": "60",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 14",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "53",
								"param2": "54",
								"param3": "55",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log4]",
								"param4": "56",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 13",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "49",
								"param2": "50",
								"param3": "51",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log4]",
								"param4": "52",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 17",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "65",
								"param2": "66",
								"param3": "67",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log5]",
								"param4": "68",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 16",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "61",
								"param2": "62",
								"param3": "63",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log4]",
								"param4": "64",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 18",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "69",
								"param2": "70",
								"param3": "71",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log5]",
								"param4": "72",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 19",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "73",
								"param2": "74",
								"param3": "75",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log5]",
								"param4": "76",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Product Intial Load 20",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 1 2 Product_Intial_Load Chnunks",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"uploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"batchsize": {
									"value": "@variables('batchSize')",
									"type": "Expression"
								},
								"param1": "77",
								"param2": "78",
								"param3": "79",
								"logStoredProcedure": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log5]",
								"param4": "80",
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Coveo Stream Close Initial Load_copy1",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "BPart Call",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 3 BPart_Product_Intial_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"UploadURI": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								},
								"Fileid": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Availability Intial Load 123",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 2 Availability_Intial_Load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"StreamID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.streamid",
									"type": "Expression"
								},
								"fileID": {
									"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Coveo Stream Close Initial Load_copy1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{activity('Coveo Stream Open Initial Load').output.streamid}/close",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Authorization": {
									"value": "Bearer @{pipeline().parameters.BearerKey}",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@variables('empty_body')",
								"type": "Expression"
							},
							"httpRequestTimeout": "00:10:00"
						}
					},
					{
						"name": "Wait3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Product Intial Load 1",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 2",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 3",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 4",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 5",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 8",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 7",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 6",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 12",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 11",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 10",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 9",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 15",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 14",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 13",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 17",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 16",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 18",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 19",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Product Intial Load 20",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "BPart Call",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "Availability Intial Load 123",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 4 Error Records Reconciliation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrgID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SrcID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BeaereKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								},
								"streamid": {
									"value": "@{activity('Coveo Stream Open Initial Load').output.streamid}",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SP_Update_Coveopushdata_json_wo_cnt_csp",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Coveo Push",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Update_coveopushdata_json_wo_csp_cnt_web_log1]",
							"storedProcedureParameters": {
								"AWSContainerFileID": {
									"value": {
										"value": "@activity('Coveo Stream Open Initial Load').output.fileId",
										"type": "Expression"
									},
									"type": "String"
								},
								"AWSUploadURI": {
									"value": {
										"value": "@activity('Coveo Stream Open Initial Load').output.Uploaduri",
										"type": "Expression"
									},
									"type": "String"
								},
								"BAtchNoStart": {
									"value": "1",
									"type": "Int32"
								},
								"PipelineID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Coveo Push').Error?.message",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy logs",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "insert into stg.coveopushdata_wo_csp_cnt_web_log\nselect * from stg.coveopushdata_wo_csp_cnt_web_log1 \ninsert into stg.coveopushdata_wo_csp_cnt_web_log\nselect * from stg.CoveoPushData_wo_csp_cnt_web_log2\ninsert into stg.coveopushdata_wo_csp_cnt_web_log\nselect * from stg.CoveoPushData_wo_csp_cnt_web_log3\ninsert into stg.coveopushdata_wo_csp_cnt_web_log\nselect * from stg.CoveoPushData_wo_csp_cnt_web_log6\ninsert into stg.coveopushdata_wo_csp_cnt_web_log\nselect * from stg.CoveoPushData_wo_csp_cnt_web_log4\ninsert into stg.coveopushdata_wo_csp_cnt_web_log\nselect * from stg.CoveoPushData_wo_csp_cnt_web_log5"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Truncate logs",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy logs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "truncate table stg.coveopushdata_wo_csp_cnt_web_log1\ntruncate table stg.coveopushdata_wo_csp_cnt_web_log2\ntruncate table stg.coveopushdata_wo_csp_cnt_web_log3\ntruncate table stg.coveopushdata_wo_csp_cnt_web_log4\ntruncate table stg.coveopushdata_wo_csp_cnt_web_log5\ntruncate table stg.coveopushdata_wo_csp_cnt_web_log6"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"Availability_cur_cnt": {
						"type": "String",
						"defaultValue": "1"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"availability_max_cnt": {
						"type": "String",
						"defaultValue": "5"
					},
					"temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until1_start": {
						"type": "String",
						"defaultValue": "2"
					},
					"until2_start": {
						"type": "String",
						"defaultValue": "11"
					},
					"until2_end": {
						"type": "String",
						"defaultValue": "20"
					},
					"until1_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until2_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until3_start": {
						"type": "String",
						"defaultValue": "21"
					},
					"until3_end": {
						"type": "String",
						"defaultValue": "30"
					},
					"until3_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until4_start": {
						"type": "String",
						"defaultValue": "31"
					},
					"until4_end": {
						"type": "String",
						"defaultValue": "40"
					},
					"until4_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"batchSize": {
						"type": "String",
						"defaultValue": "100"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]",
				"[concat(variables('factoryId'), '/pipelines/2 1 2 Product_Intial_Load Chnunks')]",
				"[concat(variables('factoryId'), '/pipelines/2 3 BPart_Product_Intial_Load')]",
				"[concat(variables('factoryId'), '/pipelines/2 2 Availability_Intial_Load')]",
				"[concat(variables('factoryId'), '/pipelines/2 4 Error Records Reconciliation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 Coveo_Bops_partilal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Stream1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_Bops 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_Bops 1').output.FirstRow.Js1,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_Bops 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js1 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream1'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream1_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 1",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@variables('Stream1')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream1_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_coveopushdata_json_Bops_stream]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream1'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}\n",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 1').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream2')), int(variables('Stream2_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_Bops 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_bops 2').output.FirstRow.Js2,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_Bops 2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js2 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream2'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream2 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream2_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 2",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2_Temp",
										"value": {
											"value": "@variables('Stream2')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream2 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream2 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2",
										"value": {
											"value": "@{add(int(variables('Stream2_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream2_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_coveopushdata_json_Bops_stream]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 2').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 2').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream2'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 2').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream3_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream3')), int(variables('Stream3_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_Bops 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_Bops 3').output.FirstRow.Js3,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_Bops 3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js3 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream3'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream3 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 3",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3_Temp",
										"value": {
											"value": "@variables('Stream3')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream3 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream3 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3",
										"value": {
											"value": "@{add(int(variables('Stream3_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_coveopushdata_json_Bops_stream]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream3'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 3').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set Stream1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1",
							"value": {
								"value": "1",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup_cnt",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT  max(batchno) maxBatchno  FROM stg.Coveopushdata_json_Bops_lookup",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Stream1_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream1')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Temp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Temp",
							"value": {
								"value": "@{div(activity('Lookup_cnt').output.value[0].maxBatchno,3)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2",
							"value": {
								"value": "@{add(int(variables('Stream1_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream2')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3",
							"value": {
								"value": "@{add(int(variables('Stream2_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream3')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_End": {
						"type": "String",
						"defaultValue": "100"
					},
					"Stream2": {
						"type": "String",
						"defaultValue": "101"
					},
					"Stream2_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream2_End": {
						"type": "String",
						"defaultValue": "200"
					},
					"Stream3": {
						"type": "String",
						"defaultValue": "201"
					},
					"Stream3_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream3_End": {
						"type": "String",
						"defaultValue": "300"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"Table_name": {
						"type": "String",
						"defaultValue": "stg.CoveoPushData_json_Bops_lookup"
					},
					"Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Source": {
						"type": "String",
						"defaultValue": "xqzjpr66aahsdkjh6go4dycoca"
					},
					"id": {
						"type": "String",
						"defaultValue": "3"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 Coveo_CNT_partial_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CNT data Push to Coveo 2 1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_CNT_partilal_PUSH_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								},
								"Table_name": "stg.CoveoPushData_json_cnt_lookup2",
								"id": "2",
								"StoredProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream2]"
							}
						}
					},
					{
						"name": "CNT data Push to Coveo 2 2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_CNT_partilal_PUSH_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								},
								"Table_name": "stg.CoveoPushData_json_cnt_lookup2",
								"id": "2",
								"StoredProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream2]"
							}
						}
					},
					{
						"name": "CNT data Push to Coveo 2 3",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_CNT_partilal_PUSH_3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								},
								"Table_name": "stg.CoveoPushData_json_cnt_lookup2",
								"id": "2",
								"StoredProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream2]"
							}
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_CNT_partilal_PUSH_1')]",
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_CNT_partilal_PUSH_2')]",
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_CNT_partilal_PUSH_3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 Coveo_CNT_partial_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lk3 1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_CNT_partilal_PUSH_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								},
								"Table_name": "stg.CoveoPushData_json_cnt_lookup3",
								"id": "3",
								"StoredProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream3]"
							}
						}
					},
					{
						"name": "Lk3 2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_CNT_partilal_PUSH_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								},
								"Table_name": "stg.CoveoPushData_json_cnt_lookup3",
								"id": "3",
								"StoredProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream3]"
							}
						}
					},
					{
						"name": "Lk3 3",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_CNT_partilal_PUSH_3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								},
								"Table_name": "stg.CoveoPushData_json_cnt_lookup3",
								"id": "3",
								"StoredProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream3]"
							}
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_CNT_partilal_PUSH_1')]",
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_CNT_partilal_PUSH_2')]",
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_CNT_partilal_PUSH_3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 Coveo_CNT_partial_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CNT data Push to Coveo 1 1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_CNT_partilal_PUSH_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationId",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								},
								"Table_name": "stg.CoveoPushData_json_cnt_lookup1",
								"id": "1",
								"StoredProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream1]"
							}
						}
					},
					{
						"name": "CNT data Push to Coveo 1 2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_CNT_partilal_PUSH_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationId",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								},
								"Table_name": "stg.CoveoPushData_json_cnt_lookup1",
								"id": "1",
								"StoredProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream1]"
							}
						}
					},
					{
						"name": "CNT data Push to Coveo 1 3",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_CNT_partilal_PUSH_3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationId",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								},
								"Table_name": "stg.CoveoPushData_json_cnt_lookup1",
								"id": "1",
								"StoredProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream1]"
							}
						}
					}
				],
				"parameters": {
					"OrganizationId": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_CNT_partilal_PUSH_1')]",
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_CNT_partilal_PUSH_2')]",
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_CNT_partilal_PUSH_3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 Coveo_CNT_partial_4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lk4 1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_CNT_partilal_PUSH_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SoruceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								},
								"Table_name": "stg.CoveoPushData_json_cnt_lookup4",
								"id": "4",
								"StoredProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream4]"
							}
						}
					},
					{
						"name": "Lk4 3",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_CNT_partilal_PUSH_3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SoruceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								},
								"Table_name": "stg.CoveoPushData_json_cnt_lookup4",
								"id": "4",
								"StoredProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream4]"
							}
						}
					},
					{
						"name": "Lk4 2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Coveo_CNT_partilal_PUSH_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SoruceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								},
								"Table_name": "stg.CoveoPushData_json_cnt_lookup4",
								"id": "4",
								"StoredProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream4]"
							}
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SoruceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_CNT_partilal_PUSH_1')]",
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_CNT_partilal_PUSH_3')]",
				"[concat(variables('factoryId'), '/pipelines/3 Coveo_CNT_partilal_PUSH_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/destination_BlackOps')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AECPAABLACKOPSP01')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "WebHierarchy_Attributes"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 1 2 Product_Intial_Load Chnunks')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1_Products",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "until1_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "until1_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until1_start')), int(variables('until1_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.uploadURI}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 1').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Lookup 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_wo_csp_cnt\n      where row_no>=@{int(variables('until1_start'))} and \n            row_no<=@{add(int(variables('until1_start')),sub(int(pipeline().parameters.batchsize),1))} and\n            row_no<=@{int(variables('until1_end'))} \n            and is_jsonstring_valid=1 \n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Set var temp 1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_json_wo_cnt_csp_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until1_temp",
										"value": {
											"value": "@variables('until1_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_json_wo_cnt_csp_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.logStoredProcedure",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Chunk 1').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until1_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 1').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set var until1 start",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set var temp 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until1_start",
										"value": {
											"value": "@{add(int(variables('until1_temp')),int(pipeline().parameters.batchsize) )}",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until2_Products",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "until2_end",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "until2_start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until2_start')), int(variables('until2_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.uploadURI}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 2').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Lookup 2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_wo_csp_cnt\n      where row_no>=@{int(variables('until2_start'))} and \n            row_no<=@{add(int(variables('until2_start')),sub(int(pipeline().parameters.batchsize),1))} and\n            row_no<=@{int(variables('until2_end'))} \n            and is_jsonstring_valid=1       \n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Set var temp 2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_json_wo_cnt_csp_copy1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until2_temp",
										"value": {
											"value": "@variables('until2_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_json_wo_cnt_csp_copy1_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.logStoredProcedure",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Chunk 2').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until2_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 2').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set var until2 start",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set var temp 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until2_start",
										"value": {
											"value": "@{add(int(variables('until2_temp')),int(pipeline().parameters.batchsize) )}",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until3_Products",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "until3_end",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "until3_start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until3_start')), int(variables('until3_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.uploadURI}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 3').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Lookup 3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_wo_csp_cnt\n      where row_no>=@{int(variables('until3_start'))} and \n            row_no<=@{add(int(variables('until3_start')),sub(int(pipeline().parameters.batchsize),1))} and\n            row_no<=@{int(variables('until3_end'))} \n            and is_jsonstring_valid=1       \n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Set var temp 3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_json_wo_cnt_csp_copy3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until3_temp",
										"value": {
											"value": "@variables('until3_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_json_wo_cnt_csp_copy3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.logStoredProcedure",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Chunk 3').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until3_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 3').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set var until3 start",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set var temp 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until3_start",
										"value": {
											"value": "@{add(int(variables('until3_temp')),int(pipeline().parameters.batchsize) )}",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "until1_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until1_start",
							"value": {
								"value": "@{activity('Lookup-1').output.firstRow.batch_start}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup-1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select batch_start,batch_end from stg.coveopushdata_initialload_loaddistributor\nwhere id =@{int(pipeline().parameters.param1)}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "until1_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until1_end",
							"value": {
								"value": "@{activity('Lookup-1').output.firstRow.batch_end}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "until2_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until2_start",
							"value": {
								"value": "@{activity('Lookup-2').output.firstRow.batch_start}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "until2_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until2_end",
							"value": {
								"value": "@{activity('Lookup-2').output.firstRow.batch_end}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "until3_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until3_start",
							"value": {
								"value": "@{activity('Lookup-3').output.firstRow.batch_start}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup-3",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select batch_start,batch_end from stg.coveopushdata_initialload_loaddistributor\nwhere id =@{int(pipeline().parameters.param3)}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "until3_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until3_end",
							"value": {
								"value": "@{activity('Lookup-3').output.firstRow.batch_end}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup-2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select batch_start,batch_end from stg.coveopushdata_initialload_loaddistributor\nwhere id =@{int(pipeline().parameters.param2)}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Until4_Products",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "until4_end",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "until4_start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until4_start')), int(variables('until4_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 4",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.uploadURI}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 4",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 4",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 4').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 4').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Lookup 4",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_wo_csp_cnt\n      where row_no>=@{int(variables('until4_start'))} and \n            row_no<=@{add(int(variables('until4_start')),sub(int(pipeline().parameters.batchsize),1))} and\n            row_no<=@{int(variables('until4_end'))} \n            and is_jsonstring_valid=1       \n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Set var temp 4",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_json_wo_cnt_csp4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until4_temp",
										"value": {
											"value": "@variables('until4_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_json_wo_cnt_csp4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 4",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.logStoredProcedure",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Chunk 4').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until4_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 4').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set var until4 start",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set var temp 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until4_start",
										"value": {
											"value": "@{add(int(variables('until4_temp')),int(pipeline().parameters.batchsize) )}",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Lookup-4",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select batch_start,batch_end from stg.coveopushdata_initialload_loaddistributor\nwhere id =@{int(pipeline().parameters.param4)}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "until4_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until4_start",
							"value": {
								"value": "@{activity('Lookup-4').output.firstRow.batch_start}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "until4_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until4_end",
							"value": {
								"value": "@{activity('Lookup-4').output.firstRow.batch_end}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"uploadURI": {
						"type": "string"
					},
					"fileID": {
						"type": "string"
					},
					"batchsize": {
						"type": "string"
					},
					"param1": {
						"type": "string"
					},
					"param2": {
						"type": "string"
					},
					"param3": {
						"type": "string"
					},
					"logStoredProcedure": {
						"type": "string"
					},
					"param4": {
						"type": "string"
					},
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"until1": {
						"type": "String",
						"defaultValue": "10"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"until2": {
						"type": "String",
						"defaultValue": "11"
					},
					"until3": {
						"type": "String",
						"defaultValue": "12"
					},
					"until1_start": {
						"type": "String",
						"defaultValue": "2"
					},
					"until1_end": {
						"type": "String",
						"defaultValue": "10"
					},
					"until2_start": {
						"type": "String",
						"defaultValue": "11"
					},
					"until2_end": {
						"type": "String",
						"defaultValue": "20"
					},
					"until1_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until2_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until3_start": {
						"type": "String",
						"defaultValue": "21"
					},
					"until3_end": {
						"type": "String",
						"defaultValue": "30"
					},
					"until3_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until4": {
						"type": "String"
					},
					"until4_start": {
						"type": "String"
					},
					"until4_end": {
						"type": "String"
					},
					"until4_temp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 3 BPart_Product_Intial_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1_Products",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "until1_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "until1_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until1_start')), int(variables('until1_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.uploadURI}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup4",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup4').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup4",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring FROM stg.CoveoPushData_json_bpart_lookup_group\nWhere batchno=@{int(variables('until1_start'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Set temp1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Bpart log1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until1_temp",
										"value": {
											"value": "@variables('until1_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Increment_Newbatchno1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set temp1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until1_start",
										"value": {
											"value": "@{add(int(variables('until1_temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Bpart log1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[bpart_Coveopushdata_log1]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Chunk1').output.fileID",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until1_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "until1_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until1_start",
							"value": {
								"value": "@{activity('Lookup-1').output.firstRow.batch_start}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup-1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select batch_start,batch_end from stg.bpart_loadbalancer\nwhere id =@{int(variables('until1'))}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "until1_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until1_end",
							"value": {
								"value": "@{activity('Lookup-1').output.firstRow.batch_end}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "until2_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until2_start",
							"value": {
								"value": "@{activity('Lookup-2').output.firstRow.batch_start}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup-2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select batch_start,batch_end from stg.bpart_loadbalancer\nwhere id =@{int(variables('until2'))}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "until2_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until2_end",
							"value": {
								"value": "@{activity('Lookup-2').output.firstRow.batch_end}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "until3_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until3_start",
							"value": {
								"value": "@{activity('Lookup-3').output.firstRow.batch_start}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup-3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select batch_start,batch_end from stg.bpart_loadbalancer\nwhere id =@{int(variables('until3'))}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference"
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "until3_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup-3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until3_end",
							"value": {
								"value": "@{activity('Lookup-3').output.firstRow.batch_end}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "declare @maxvalue int;\ntruncate table stg.bpart_loadbalancer;\n\nset @maxvalue =(select coalesce(max(batchno),0) from stg.CoveoPushData_Json_BPart_Lookup_group)\n\ninsert into stg.bpart_loadbalancer values(1,1,@maxvalue/3,GETDATE()),\n(2,(@maxvalue/3)+1,2*(@maxvalue/3),GETDATE()),\n(3,(2*(@maxvalue/3))+1,@maxvalue,GETDATE())",
										"type": "Expression"
									}
								}
							]
						}
					},
					{
						"name": "Until2_Products",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "until2_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "until2_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until2_start')), int(variables('until2_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup2').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring FROM stg.CoveoPushData_json_bpart_lookup_group\nWhere batchno=@{int(variables('until2_start'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Set temp2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Bpart log2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until2_temp",
										"value": {
											"value": "@variables('until2_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Increment_Newbatchno2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set temp2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until2_start",
										"value": {
											"value": "@{add(int(variables('until2_temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Bpart log2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[bpart_Coveopushdata_log2]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Chunk2').output.fileid",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until2_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push 2').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Chunk2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.uploadURI}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until3_Products",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "until3_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "until3_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until3_start')), int(variables('until3_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.uploadURI}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup3').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring FROM stg.CoveoPushData_json_bpart_lookup_group\nWhere batchno=@{int(variables('until3_start'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Set temp3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Bpart log3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until3_temp",
										"value": {
											"value": "@variables('until3_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Increment_Newbatchno3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set temp3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until3_start",
										"value": {
											"value": "@{add(int(variables('until3_temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Bpart log3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[bpart_Coveopushdata_log3]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Chunk3').output.fileid",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until3_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push 3').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"parameters": {
					"UploadURI": {
						"type": "string"
					},
					"Fileid": {
						"type": "string"
					},
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"until1": {
						"type": "String",
						"defaultValue": "1"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"until2": {
						"type": "String",
						"defaultValue": "2"
					},
					"until3": {
						"type": "String",
						"defaultValue": "3"
					},
					"until1_start": {
						"type": "String",
						"defaultValue": "2"
					},
					"until1_end": {
						"type": "String",
						"defaultValue": "10"
					},
					"until2_start": {
						"type": "String",
						"defaultValue": "11"
					},
					"until2_end": {
						"type": "String",
						"defaultValue": "20"
					},
					"until1_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until2_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until3_start": {
						"type": "String",
						"defaultValue": "21"
					},
					"until3_end": {
						"type": "String",
						"defaultValue": "30"
					},
					"until3_temp": {
						"type": "String",
						"defaultValue": "1"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 2 Availability_Intial_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Availability_1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set until1_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set until1_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until1_start')), int(variables('until1_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.StreamID}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 1').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup 1",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring FROM stg.coveopushdata_availability\nwhere batchno=@{int(variables('until1_start'))}\n",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Set Increment 1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_Availability 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until1_temp",
										"value": {
											"value": "@variables('until1_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_Availability 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_CoveoPushData_Availability]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@pipeline().parameters.fileID",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.StreamID",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until1_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Increment 11",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Increment 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until1_start",
										"value": {
											"value": "@{add(int(variables('until1_temp')),1 )}",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Availability_3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set unti3_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set until3_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until3_start')), int(variables('until3_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.StreamID}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 3').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup 3",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(   SELECT  Jsonstring FROM stg.coveopushdata_availability\n    where batchno=@{int(variables('until3_start'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Set Increment 3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_Availability 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until3_temp",
										"value": {
											"value": "@variables('until3_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_Availability 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_CoveoPushData_Availability]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@pipeline().parameters.fileID",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.StreamID",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until3_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Increment 33",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Increment 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until3_start",
										"value": {
											"value": "@{add(int(variables('until3_temp')),1 )}",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Availability_2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set until2_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set until2_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until2_start')), int(variables('until2_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.StreamID}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 2').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup 2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(   SELECT  Jsonstring FROM stg.coveopushdata_availability\n    where batchno=@{int(variables('until2_start'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Set Increment 2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_Availability 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until2_temp",
										"value": {
											"value": "@variables('until2_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_Availability 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_CoveoPushData_Availability]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@pipeline().parameters.fileID",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.StreamID",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until2_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Increment 22",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Increment 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until2_start",
										"value": {
											"value": "@{add(int(variables('until2_temp')),1 )}",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Availability_4",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set until4_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set until4_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until4_start')), int(variables('until4_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 4",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/@{pipeline().parameters.StreamID}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 4",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 4').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 4').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup 4",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(   SELECT  Jsonstring FROM stg.coveopushdata_availability\n    where batchno=@{int(variables('until4_start'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Set Increment 4",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_Availability 4",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Chunk Push 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until4_temp",
										"value": {
											"value": "@variables('until4_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_Availability 4",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_CoveoPushData_Availability]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@pipeline().parameters.fileID",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@pipeline().parameters.StreamID",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until4_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Increment 44",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Increment 4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until4_start",
										"value": {
											"value": "@{add(int(variables('until4_temp')),1 )}",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Availability Get max batchno",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(batchno) max_batchno \nfrom stg.coveopushdata_availability",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Set temp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Availability Get max batchno",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "temp",
							"value": {
								"value": "@{div(int(activity('Availability Get max batchno').output.firstRow.max_batchno),4)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until1_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until1_start",
							"value": "1"
						}
					},
					{
						"name": "Set until1_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until1_end",
							"value": {
								"value": "@variables('temp')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until2_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until2_start",
							"value": {
								"value": "@{add(int(variables('temp')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until2_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until2_end",
							"value": {
								"value": "@{mul(int(variables('temp')),2)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set unti3_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until3_start",
							"value": {
								"value": "@{add(mul(int(variables('temp')),2),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until3_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until3_end",
							"value": {
								"value": "@{mul(int(variables('temp')),3)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until4_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until4_start",
							"value": {
								"value": "@{add(mul(int(variables('temp')),3),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until4_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until4_end",
							"value": {
								"value": "@{activity('Availability Get max batchno').output.firstRow.max_batchno}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"StreamID": {
						"type": "string"
					},
					"fileID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"until1_start": {
						"type": "String",
						"defaultValue": "2"
					},
					"until1_end": {
						"type": "String",
						"defaultValue": "13"
					},
					"until2_start": {
						"type": "String",
						"defaultValue": "14"
					},
					"until2_end": {
						"type": "String",
						"defaultValue": "26"
					},
					"until1_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until2_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until3_start": {
						"type": "String",
						"defaultValue": "27"
					},
					"until3_end": {
						"type": "String",
						"defaultValue": "40"
					},
					"until3_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until4_start": {
						"type": "String",
						"defaultValue": "41"
					},
					"until4_temp": {
						"type": "String"
					},
					"until4_end": {
						"type": "String",
						"defaultValue": "54"
					},
					"temp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 4 Error Records Reconciliation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select batchno from stg.coveopushdata_wo_csp_cnt_web_log1 where errormessage like 'The%'\nunion\nselect batchno from stg.coveopushdata_wo_csp_cnt_web_log2 where errormessage like 'The%'\nunion\nselect batchno from stg.coveopushdata_wo_csp_cnt_web_log3 where errormessage like 'The%'\nunion\nselect batchno from stg.coveopushdata_wo_csp_cnt_web_log4 where errormessage like 'The%'\nunion\nselect batchno from stg.coveopushdata_wo_csp_cnt_web_log5 where errormessage like 'The%'\nunion\nselect batchno from stg.coveopushdata_wo_csp_cnt_web_log6 where errormessage like 'The%'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_blackops_prod",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "na",
									"schemaName": "na"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrgID}/sources/@{pipeline().parameters.OrgID}-@{pipeline().parameters.SrcID}/stream/@{pipeline().parameters.streamid}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BeaereKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 1').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Lookup 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_wo_csp_cnt\n      where row_no>=@{item().batchno} and \n            row_no<=@{add(item().batchno,49)}\n            and is_jsonstring_valid=1 \n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrgID}/sources/@{pipeline().parameters.OrgID}-@{pipeline().parameters.SrcID}/stream/@{pipeline().parameters.streamid}/chunk",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BeaereKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Chunk Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Chunk 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 2').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										},
										"httpRequestTimeout": "00:10:00"
									}
								},
								{
									"name": "Lookup 2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_wo_csp_cnt\n      where row_no>=@{add(item().batchno,50)} and \n            row_no<=@{add(item().batchno,99)}\n            and is_jsonstring_valid=1 \n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								},
								{
									"name": "Wait2",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Wait3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"parameters": {
					"OrgID": {
						"type": "string"
					},
					"SrcID": {
						"type": "string"
					},
					"BeaereKey": {
						"type": "string"
					},
					"streamid": {
						"type": "string"
					}
				},
				"variables": {
					"First": {
						"type": "String"
					},
					"Second": {
						"type": "String"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blackops_prod')]",
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 Coveo_CNT_partilal_PUSH_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Stream1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 1').output.FirstRow.Js1,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js1 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream1'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream1_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@variables('Stream1')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 1",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream1_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.StoredProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream1'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 1').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 1').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream2')), int(variables('Stream2_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 2').output.FirstRow.Js2,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js2 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream2'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream2 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream2_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2_Temp",
										"value": {
											"value": "@variables('Stream2')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream2 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream2 var",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 2",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2",
										"value": {
											"value": "@{add(int(variables('Stream2_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream2_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.StoredProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 2').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 2').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream2'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 2').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 2').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream3_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream3')), int(variables('Stream3_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 3').output.FirstRow.Js3,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js3 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream3'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream3 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3_Temp",
										"value": {
											"value": "@variables('Stream3')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream3 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream3 var",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 3",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3",
										"value": {
											"value": "@{add(int(variables('Stream3_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.StoredProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream3'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"Errormessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 3').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 3').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set Stream1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1",
							"value": {
								"value": "@{activity('Lookup_cnt').output.value[0].srt_value}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup_cnt",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set TableName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT  *  FROM stg.cnt_loaddistributor where id = @{int(pipeline().parameters.id)}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Stream1_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream1')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Temp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Temp",
							"value": {
								"value": "@{div(add(sub(activity('Lookup_cnt').output.value[0].end_value,activity('Lookup_cnt').output.value[0].srt_value),1),9)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2",
							"value": {
								"value": "@{add(int(variables('Stream1_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream2')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3",
							"value": {
								"value": "@{add(int(variables('Stream2_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream3')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set TableName",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Table_name",
							"value": {
								"value": "@pipeline().parameters.Table_name",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					},
					"Table_name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"StoredProcedureName": {
						"type": "string"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_End": {
						"type": "String",
						"defaultValue": "100"
					},
					"Stream2": {
						"type": "String",
						"defaultValue": "101"
					},
					"Stream2_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream2_End": {
						"type": "String",
						"defaultValue": "200"
					},
					"Stream3": {
						"type": "String",
						"defaultValue": "201"
					},
					"Stream3_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream3_End": {
						"type": "String",
						"defaultValue": "300"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"Table_name": {
						"type": "String",
						"defaultValue": "stg.CoveoPushData_json_cnt_lookup3"
					},
					"Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Source": {
						"type": "String",
						"defaultValue": "xqzjpr66aahsdkjh6go4dycoca"
					},
					"id": {
						"type": "String",
						"defaultValue": "3"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 Coveo_CNT_partilal_PUSH_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Stream1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 1').output.FirstRow.Js1,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js1 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream1'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream1_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@variables('Stream1')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 1",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream1_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.StoredProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream1'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push 1').Error?.message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 1').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream2')), int(variables('Stream2_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 2').output.FirstRow.Js2,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js2 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream2'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream2 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream2_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2_Temp",
										"value": {
											"value": "@variables('Stream2')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream2 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream2 var",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 2",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2",
										"value": {
											"value": "@{add(int(variables('Stream2_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream2_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.StoredProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 2').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 2').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream2'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 2').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 2').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream3_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream3')), int(variables('Stream3_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 3').output.FirstRow.Js3,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js3 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream3'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream3 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3_Temp",
										"value": {
											"value": "@variables('Stream3')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream3 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream3 var",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 3",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3",
										"value": {
											"value": "@{add(int(variables('Stream3_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.StoredProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream3'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 3').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 3').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set Stream1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1",
							"value": {
								"value": "@{add(mul(3,int(variables('Temp'))),activity('Lookup_cnt').output.value[0].srt_value)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup_cnt",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set TableName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT  *  FROM stg.cnt_loaddistributor where id = @{int(pipeline().parameters.id)}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Stream1_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream1')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Temp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Temp",
							"value": {
								"value": "@{div(add(sub(activity('Lookup_cnt').output.value[0].end_value,activity('Lookup_cnt').output.value[0].srt_value),1),9)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2",
							"value": {
								"value": "@{add(int(variables('Stream1_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream2')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3",
							"value": {
								"value": "@{add(int(variables('Stream2_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream3')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set TableName",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Table_name",
							"value": {
								"value": "@pipeline().parameters.Table_name",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					},
					"Table_name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"StoredProcedureName": {
						"type": "string"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_End": {
						"type": "String",
						"defaultValue": "100"
					},
					"Stream2": {
						"type": "String",
						"defaultValue": "101"
					},
					"Stream2_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream2_End": {
						"type": "String",
						"defaultValue": "200"
					},
					"Stream3": {
						"type": "String",
						"defaultValue": "201"
					},
					"Stream3_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream3_End": {
						"type": "String",
						"defaultValue": "300"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"Table_name": {
						"type": "String",
						"defaultValue": "stg.CoveoPushData_json_cnt_lookup3"
					},
					"Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Source": {
						"type": "String",
						"defaultValue": "xqzjpr66aahsdkjh6go4dycoca"
					},
					"id": {
						"type": "String",
						"defaultValue": "3"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 Coveo_CNT_partilal_PUSH_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Stream1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 1').output.FirstRow.Js1,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js1 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream1'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream1_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@variables('Stream1')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 1",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream1_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.StoredProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream1'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 1').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 1').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream2')), int(variables('Stream2_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 2').output.FirstRow.Js2,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js2 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream2'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream2 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream2_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2_Temp",
										"value": {
											"value": "@variables('Stream2')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream2 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream2 var",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 2",
											"dependencyConditions": [
												"Completed",
												"Skipped"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2",
										"value": {
											"value": "@{add(int(variables('Stream2_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream2_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.StoredProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 2').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 2').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream2'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 2').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 2').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream3_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream3')), int(variables('Stream3_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 3').output.FirstRow.Js3,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js3 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream3'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream3 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3_Temp",
										"value": {
											"value": "@variables('Stream3')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream3 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream3 var",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Push 3",
											"dependencyConditions": [
												"Completed",
												"Skipped"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3",
										"value": {
											"value": "@{add(int(variables('Stream3_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@pipeline().parameters.StoredProcedureName",
											"type": "Expression"
										},
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream3'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@{activity('Coveo Stream Chunk Push 3').Error?.message}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 3').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set Stream1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1",
							"value": {
								"value": "@{add(mul(6,int(variables('Temp'))),activity('Lookup_cnt').output.value[0].srt_value)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup_cnt",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set TableName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT  *  FROM stg.cnt_loaddistributor where id = @{int(pipeline().parameters.id)}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Stream1_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream1')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Temp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Temp",
							"value": {
								"value": "@{div(add(sub(activity('Lookup_cnt').output.value[0].end_value,activity('Lookup_cnt').output.value[0].srt_value),1),9)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2",
							"value": {
								"value": "@{add(int(variables('Stream1_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream2')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3",
							"value": {
								"value": "@{add(int(variables('Stream2_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3_End",
							"value": {
								"value": "@{activity('Lookup_cnt').output.value[0].end_value}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set TableName",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Table_name",
							"value": {
								"value": "@pipeline().parameters.Table_name",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					},
					"Table_name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"StoredProcedureName": {
						"type": "string"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_End": {
						"type": "String",
						"defaultValue": "100"
					},
					"Stream2": {
						"type": "String",
						"defaultValue": "101"
					},
					"Stream2_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream2_End": {
						"type": "String",
						"defaultValue": "200"
					},
					"Stream3": {
						"type": "String",
						"defaultValue": "201"
					},
					"Stream3_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream3_End": {
						"type": "String",
						"defaultValue": "300"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"Table_name": {
						"type": "String",
						"defaultValue": "stg.CoveoPushData_json_cnt_lookup3"
					},
					"Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Source": {
						"type": "String",
						"defaultValue": "xqzjpr66aahsdkjh6go4dycoca"
					},
					"id": {
						"type": "String",
						"defaultValue": "3"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Full Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blackops_prod')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AECPAABLACKOPSP01')]",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string"
					},
					"schemaName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "rowno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "empid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ename",
						"type": "varchar"
					},
					{
						"name": "sal",
						"type": "int",
						"precision": 10
					},
					{
						"name": "deptno",
						"type": "int",
						"precision": 10
					},
					{
						"name": "isactive",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "emp"
				}
			},
			"dependsOn": []
		}
	]
}