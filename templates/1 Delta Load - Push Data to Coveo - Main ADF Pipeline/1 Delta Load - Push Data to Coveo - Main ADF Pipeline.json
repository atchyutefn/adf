{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"AECPAABLACKOPSP01": {
			"type": "string"
		},
		"blackopsProdLink": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/1 Delta Load - Push Data to Coveo - Main ADF Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Coveo Day1 and Day0 Preparation",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CoveoPushData Preparation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_WO_CSP_CNT_Delta]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Coveo Delta - Update",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Coveo Day1 and Day0 Preparation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_WO_CSP_CNT_Delta_Update]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Coveo Delta - Delete",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Coveo Day1 and Day0 Preparation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_WO_CSP_CNT_Delta_Delete]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Coveo Delta - Add",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Coveo Day1 and Day0 Preparation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_WO_CSP_CNT_Delta_Add]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CoveoPushData Preparation",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Load_CoveoPushData]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "BPart Delta",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Grouping products Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 4 1 Delta_BPart_Add_Update",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@variables('OrganizationID')",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@variables('SourceID')",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@variables('BearerKey')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Delta CNT",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4 Delta_Partial_CNT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@variables('OrganizationID')",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@variables('SourceID')",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@variables('BearerKey')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Availability Intial Load 123",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Step1-Load_CoveoPushData_Availability",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 5 Delta_Availability",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@variables('OrganizationID')",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@variables('SourceID')",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@variables('BearerKey')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(int(activity('Update').output.firstRow.cnt),0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Delta Update Pipeline Call",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "2 1 Delta_initial_load_Update",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"OrganizationID": {
												"value": "@variables('OrganizationID')",
												"type": "Expression"
											},
											"SourceID": {
												"value": "@variables('SourceID')",
												"type": "Expression"
											},
											"BearerKey": {
												"value": "@variables('BearerKey')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Wait2",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Delta Update Pipeline Call",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Update",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Coveo Delta - Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) cnt from stg.coveopushdata_json_wo_csp_cnt_delta_update",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "If Condition Delete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(int(activity('Delete').output.firstRow.cnt),0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Delta Delete Pipeline Call",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "2 2 Delta_initial_load_Delete",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"OrganizationID": {
												"value": "@variables('OrganizationID')",
												"type": "Expression"
											},
											"SourceID": {
												"value": "@variables('SourceID')",
												"type": "Expression"
											},
											"BearerKey": {
												"value": "@variables('BearerKey')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Wait3",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Delta Delete Pipeline Call",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Wait1_copy1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Delete",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Coveo Delta - Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) cnt from stg.coveopushdata_json_wo_csp_cnt_delta_delete",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Add",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Coveo Delta - Add",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) cnt from stg.coveopushdata_json_wo_csp_cnt_delta_add",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "If Condition Add",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Add",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(int(activity('add').output.firstRow.cnt),0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Delta Add Pipeline Call",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "2 3 Delta_initial_load_Add",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"OrganizationID": {
												"value": "@variables('OrganizationID')",
												"type": "Expression"
											},
											"SourceID": {
												"value": "@variables('SourceID')",
												"type": "Expression"
											},
											"BearerKey": {
												"value": "@variables('BearerKey')",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Wait1_copy1_copy1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Delta BOPS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait6",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "3 Delta_Partial_BOPS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@variables('OrganizationID')",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@variables('SourceID')",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@variables('BearerKey')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Step1-Load_CoveoPushData_Availability",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Load_CoveoPushData_availability]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Coveo Delta - Max Payload",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Coveo Delta - Update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_JSON_WO_CSP_CNT_Delta_Max_Payload]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Coveo Delta - Lookup",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Coveo Delta - Max Payload",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_wo_csp_cnt_Delta_lookup]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Bpart Update Add New Records preparation",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "1 BPart JSON preparation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_BPart_Delta_Add_Update_delete]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "1 BPart JSON preparation",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_BPart_Delta]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete Bpart Delta",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Bpart Update Add New Records preparation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "2 4 2 Delta_Bpart_Delete",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@variables('OrganizationID')",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@variables('SourceID')",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@variables('BearerKey')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "maxpayload Calculation",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Bpart Update Add New Records preparation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_JSON_BPart_Delta_Max_Payload]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Grouping products Lookup",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "maxpayload Calculation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_BPart_Delta_lookup]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Wait4",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Availability Intial Load 123",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait5",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Delta BOPS",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Error Mail Notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Delete Bpart Delta",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-14.southeastasia.logic.azure.com:443/workflows/b5dccf7903484ee1b6c772c3a8aa0f51/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=uhVEhHPsZNiltHdyvFv5ZGDfRXHequxZ6hM7Dvt0QIw",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "{\n    \"ADFName\":\"@{pipeline().DataFactory}\",\n    \"ErrorMessage\":\"@{activity('Delete Bpart Delta').Error.Message}\",\n    \"PipelineName\":\"@{pipeline().Pipeline}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Wait6",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "If Condition Delete",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							},
							{
								"activity": "If Condition Add",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 600
						}
					},
					{
						"name": "Data Reconciliation",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Delta CNT",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "BPart Delta",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Wait4",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Wait5",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Delete Bpart Delta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "5 BlackOps_Coveo_Data_Reconciliation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"variables": {
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"OrganizationID": {
						"type": "String",
						"defaultValue": "blackwoodsproductiondb4f7vq2"
					},
					"SourceID": {
						"type": "String",
						"defaultValue": "skmopt6atrldmbcplagqyg2kqa"
					},
					"BearerKey": {
						"type": "String",
						"defaultValue": "xx1b9103ee-5ac4-4917-a945-66f5b26def8b"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/2 4 1 Delta_BPart_Add_Update')]",
				"[concat(variables('factoryId'), '/pipelines/4 Delta_Partial_CNT')]",
				"[concat(variables('factoryId'), '/pipelines/2 5 Delta_Availability')]",
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]",
				"[concat(variables('factoryId'), '/pipelines/3 Delta_Partial_BOPS')]",
				"[concat(variables('factoryId'), '/pipelines/2 4 2 Delta_Bpart_Delete')]",
				"[concat(variables('factoryId'), '/pipelines/5 BlackOps_Coveo_Data_Reconciliation')]",
				"[concat(variables('factoryId'), '/pipelines/2 1 Delta_initial_load_Update')]",
				"[concat(variables('factoryId'), '/pipelines/2 2 Delta_initial_load_Delete')]",
				"[concat(variables('factoryId'), '/pipelines/2 3 Delta_initial_load_Add')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 4 1 Delta_BPart_Add_Update')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Stream1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup_cnt 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(     select Jsonstring \n      from stg.coveopushdata_json_BPart_Delta_Lookup\n      where batchno=@{int(variables('Stream1'))} \n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Intial Load BPart Update Add Log_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@variables('Stream1')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Create S3 File Container",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"Accept": "application/json",
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@{variables('empty_body')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Data To Container",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Create S3 File Container",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup_cnt 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 File Container').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"addOrUpdate\": [',activity('Lookup_cnt 1').output.value[0].Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push Data To Container",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 file container').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Intial Load BPart Update Add Log_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Push Data To Container",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CoveoPushData_bpart_Delta_Update_add_log]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": null,
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 File Container').output.uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@int(variables('Stream1'))",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Create S3 File Container').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Get rows Add Update",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy logs to history",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select max(batchno) cnt from stg.coveopushdata_json_BPart_Delta_Lookup",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Until_Stream2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream2')), int(variables('Stream2_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup_cnt 2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(     select Jsonstring \n      from stg.coveopushdata_json_BPart_Delta_Lookup\n      where batchno=@{int(variables('Stream2'))} \n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Stream2 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Intial Load BPart Update Add Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2_Temp",
										"value": {
											"value": "@variables('Stream2')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream2 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream2 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2",
										"value": {
											"value": "@{add(int(variables('Stream2_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Create S3 File Container 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"Accept": "application/json",
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@{variables('empty_body')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Data To Container 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Create S3 File Container 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup_cnt 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 File Container 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"addOrUpdate\": [',activity('Lookup_cnt 2').output.value[0].Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push Data To Container 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File container 2').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Intial Load BPart Update Add Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Push Data To Container 2",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CoveoPushData_bpart_Delta_Update_add_log]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": null,
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 File Container 2').output.uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@int(variables('Stream2'))",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Create S3 File Container 2').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream3')), int(variables('Stream3_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup_cnt 3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(     select Jsonstring \n      from stg.coveopushdata_json_BPart_Delta_Lookup\n      where batchno=@{int(variables('Stream3'))} \n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Stream3 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Intial Load BPart Update Add Log_copy2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3_Temp",
										"value": {
											"value": "@variables('Stream3')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream3 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream3 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3",
										"value": {
											"value": "@{add(int(variables('Stream3_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Create S3 File Container 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"Accept": "application/json",
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@{variables('empty_body')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Data To Container 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Create S3 File Container 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup_cnt 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 File Container 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"addOrUpdate\": [',activity('Lookup_cnt 3').output.value[0].Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push Data To Container 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 file container 3').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Intial Load BPart Update Add Log_copy2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Push Data To Container 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CoveoPushData_bpart_Delta_Update_add_log]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": null,
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 File Container 3').output.uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@int(variables('Stream3'))",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Create S3 File Container 3').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get rows Add Update",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(int(activity('Get rows Add Update').output.firstRow.cnt),3)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Set stream1_copy1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": "1"
									}
								},
								{
									"name": "Set stream1 End_copy1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_End",
										"value": {
											"value": "@{activity('Get rows Add Update').output.firstRow.cnt}",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set stream1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": "1"
									}
								},
								{
									"name": "Set stream1 End",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_End",
										"value": {
											"value": "@{int(variables('Temp'))}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set stream2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2",
										"value": {
											"value": "@{add(int(variables('Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set stream2 End",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2_End",
										"value": {
											"value": "@{mul(int(variables('Temp')),2)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Temp",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Temp",
										"value": {
											"value": "@{div(int(activity('Get rows Add Update').output.firstRow.cnt),3)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set stream3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3",
										"value": {
											"value": "@{add(mul(int(variables('Temp')),2),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set stream3 End",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Temp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3_End",
										"value": {
											"value": "@{int(activity('Get rows Add Update').output.firstRow.cnt)}",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Copy logs to history",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('blackopsProdLink')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "insert into [stg].[CoveoPushData_bpart_Delta_Update_add_log_history]\nselect * from [stg].[CoveoPushData_bpart_Delta_Update_add_log]\n\ntruncate table [stg].[CoveoPushData_bpart_Delta_Update_add_log]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Fetch error batches count",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Until_Stream3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Until_Stream2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Until_Stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as total from [stg].[CoveoPushData_bpart_Delta_Update_add_log]\nwhere Errormessage like '%service is too large%'\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "If Condition1_copy1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Fetch error batches count",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Fetch error batches count').output.firstRow.total,0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Execute Pipeline4_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "4 4 Delta_Partial_CNT_Error_Batches_Repushing",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"OrganizationID": {
												"value": "@pipeline().parameters.OrganizationID",
												"type": "Expression"
											},
											"SourceID": {
												"value": "@pipeline().parameters.SourceID",
												"type": "Expression"
											},
											"BearerKey": {
												"value": "@pipeline().parameters.BearerKey",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Wait1_copy1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string",
						"defaultValue": "blackwoodsproductiondb4f7vq2"
					},
					"SourceID": {
						"type": "string",
						"defaultValue": "skmopt6atrldmbcplagqyg2kqa"
					},
					"BearerKey": {
						"type": "string",
						"defaultValue": "xx1b9103ee-5ac4-4917-a945-66f5b26def8b"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_End": {
						"type": "String",
						"defaultValue": "2452"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"Stream2": {
						"type": "String",
						"defaultValue": "2"
					},
					"Stream2_Temp": {
						"type": "String"
					},
					"Stream2_End": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream3": {
						"type": "String",
						"defaultValue": "2"
					},
					"Stream3_Temp": {
						"type": "String"
					},
					"Stream3_End": {
						"type": "String",
						"defaultValue": "1"
					},
					"Temp": {
						"type": "String"
					},
					"batchsize": {
						"type": "String",
						"defaultValue": "100"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]",
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]",
				"[concat(variables('factoryId'), '/pipelines/4 4 Delta_Partial_CNT_Error_Batches_Repushing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4 Delta_Partial_CNT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Day0 Day1 cnt data preparation",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy logs to history",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_CNT_Partial_Delta]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delta records - Add Update Delete",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Day0 Day1 cnt data preparation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_CNT_Partial_Delta_Update_Add]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Maxpayload",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Delta records - Add Update Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_JSON_cnt_Delta_MaxPayload]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup group",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Maxpayload",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_cnt_lookup_delta]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Load Distributor",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Lookup group",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "declare @max int\nset @max=(select max(batchno) from STG.CoveoPushData_Json_cnt_lookup_delta)\ntruncate table stg.cnt_loaddistributor_delta\ninsert into stg.cnt_loaddistributor_delta\nvalues(1,1,@max/3,GETDATE()),\n(2,(@max/3)+1,(@max/3)*2,GETDATE()),\n(3,((@max/3)*2)+1,@max,GETDATE())"
								}
							]
						}
					},
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4 1 Delta_Partial_CNT_Push_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4 2 Delta_Partial_CNT_Push_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute Pipeline3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Load Distributor",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "4 3 Delta_Partial_CNT_Push_3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"OrganizationID": {
									"value": "@pipeline().parameters.OrganizationID",
									"type": "Expression"
								},
								"SourceID": {
									"value": "@pipeline().parameters.SourceID",
									"type": "Expression"
								},
								"BearerKey": {
									"value": "@pipeline().parameters.BearerKey",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Copy logs to history",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('blackopsProdLink')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "insert into stg.[CoveoPushData_cnt_stream_delta_history_log]\nselect * from stg.[CoveoPushData_cnt_stream1]\n\ntruncate table stg.[CoveoPushData_cnt_stream1]"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Fetch error batches count",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute Pipeline2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Execute Pipeline3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) as total from stg.[CoveoPushData_cnt_stream1]\nwhere Errormessage like '%service is too large%'\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Fetch error batches count",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Fetch error batches count').output.firstRow.total,0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Execute Pipeline4",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "4 4 Delta_Partial_CNT_Error_Batches_Repushing",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"OrganizationID": {
												"value": "@pipeline().parameters.OrganizationID",
												"type": "Expression"
											},
											"SourceID": {
												"value": "@pipeline().parameters.SourceID",
												"type": "Expression"
											},
											"BearerKey": {
												"value": "@pipeline().parameters.BearerKey",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string",
						"defaultValue": "blackwoodsnonproduction18ywd51dd"
					},
					"SourceID": {
						"type": "string",
						"defaultValue": "wfprngzh3psutpsinc7po7sl4u"
					},
					"BearerKey": {
						"type": "string",
						"defaultValue": "xxe4ddf465-208c-4042-951f-6a4e4339fa46"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/4 1 Delta_Partial_CNT_Push_1')]",
				"[concat(variables('factoryId'), '/pipelines/4 2 Delta_Partial_CNT_Push_2')]",
				"[concat(variables('factoryId'), '/pipelines/4 3 Delta_Partial_CNT_Push_3')]",
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]",
				"[concat(variables('factoryId'), '/pipelines/4 4 Delta_Partial_CNT_Error_Batches_Repushing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 5 Delta_Availability')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Availability_1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set until1_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set until1_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until1_start')), int(variables('until1_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Create S3 file container 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push data to S3 container 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 file container 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 1').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup 1",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Create S3 file container 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(   SELECT  Jsonstring FROM stg.coveopushdata_availability\n    where batchno=@{int(variables('until1_start'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Set Increment 1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_Availability 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Push Container to Stream 1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until1_temp",
										"value": {
											"value": "@variables('until1_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_Availability 1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_CoveoPushData_Availability]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Create S3 file container 1').output.fileid",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 file container 1').output.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until1_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Increment 11",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Increment 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until1_start",
										"value": {
											"value": "@{add(int(variables('until1_temp')),1 )}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push data to S3 container 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 file container 1').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Availability Get max batchno",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(batchno) max_batchno \nfrom stg.coveopushdata_availability",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Set temp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Availability Get max batchno",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "temp",
							"value": {
								"value": "@{div(int(activity('Availability Get max batchno').output.firstRow.max_batchno),3)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until1_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until1_start",
							"value": "1"
						}
					},
					{
						"name": "Set until1_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until1_end",
							"value": {
								"value": "@variables('temp')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until2_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until2_start",
							"value": {
								"value": "@{add(int(variables('temp')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until2_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until2_end",
							"value": {
								"value": "@{mul(int(variables('temp')),2)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set unti3_start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until3_start",
							"value": {
								"value": "@{add(mul(int(variables('temp')),2),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set until3_end",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "until3_end",
							"value": {
								"value": "@{activity('Availability Get max batchno').output.firstRow.max_batchno}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until_Availability_2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set until2_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set until2_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until2_start')), int(variables('until2_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Create S3 file container 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push data to S3 container 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 file container 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 2').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup 2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Create S3 file container 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(   SELECT  Jsonstring FROM stg.coveopushdata_availability\n    where batchno=@{int(variables('until2_start'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Set Increment 2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_Availability 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Push Container to Stream 2",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until2_temp",
										"value": {
											"value": "@variables('until2_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_Availability 2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_CoveoPushData_Availability]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Create S3 file container 2').output.fileid",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 file container 2').output.uploadURI",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until2_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Increment 22",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Increment 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until2_start",
										"value": {
											"value": "@{add(int(variables('until2_temp')),1 )}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push data to S3 container 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 file container 2').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Availability_3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set unti3_start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set until3_end",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('until3_start')), int(variables('until3_end')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Create S3 file container 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push data to S3 container 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 file container 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup 3').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup 3",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Create S3 file container 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(   SELECT  Jsonstring FROM stg.coveopushdata_availability\n    where batchno=@{int(variables('until3_start'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Set Increment 3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Coveopushdata_Availability 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Push Container to Stream 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until3_temp",
										"value": {
											"value": "@variables('until3_start')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Coveopushdata_Availability 3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Lookup 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_CoveoPushData_Availability]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Create S3 file container 3').output.fileid",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 file container 3').output.uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@variables('until3_start')",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Set Increment 33",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set Increment 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "until3_start",
										"value": {
											"value": "@{add(int(variables('until3_temp')),1 )}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push data to S3 container 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 file container 3').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"until1_start": {
						"type": "String",
						"defaultValue": "2"
					},
					"until1_end": {
						"type": "String",
						"defaultValue": "13"
					},
					"until2_start": {
						"type": "String",
						"defaultValue": "14"
					},
					"until2_end": {
						"type": "String",
						"defaultValue": "26"
					},
					"until1_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until2_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until3_start": {
						"type": "String",
						"defaultValue": "27"
					},
					"until3_end": {
						"type": "String",
						"defaultValue": "40"
					},
					"until3_temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"until4_start": {
						"type": "String",
						"defaultValue": "41"
					},
					"until4_temp": {
						"type": "String"
					},
					"until4_end": {
						"type": "String",
						"defaultValue": "54"
					},
					"temp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/destination_BlackOps1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AECPAABLACKOPSP01')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "WebHierarchy_Attributes"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 Delta_Partial_BOPS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SP Day1 TO Day0 BOPS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_Bops_Partial_Delta]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update New Delete records Preparation",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SP Day1 TO Day0 BOPS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_Json_bops_Partial_Delta_Update_Add]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Get rows count Add Update Delete",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Update New Delete records Preparation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select count(*) cnt from stg.coveopushdata_json_bops_partial_Delta_update_Add",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get rows count Add Update Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(int(activity('Get rows count Add Update Delete').output.firstRow.cnt),0)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Call BOPS push",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "3 1 Delta_Partial_BOPS_Push_call",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"OrganizationID": {
												"value": "@pipeline().parameters.OrganizationID",
												"type": "Expression"
											},
											"SourceID": {
												"value": "@pipeline().parameters.SourceID",
												"type": "Expression"
											},
											"BearerKey": {
												"value": "@pipeline().parameters.BearerKey",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string",
						"defaultValue": "blackwoodsnonproduction18ywd51dd"
					},
					"SourceID": {
						"type": "string",
						"defaultValue": "wfprngzh3psutpsinc7po7sl4u"
					},
					"BearerKey": {
						"type": "string",
						"defaultValue": "xxe4ddf465-208c-4042-951f-6a4e4339fa46"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String"
					},
					"Stream1_End": {
						"type": "String"
					},
					"Stream1_Temp": {
						"type": "String"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]",
				"[concat(variables('factoryId'), '/pipelines/3 1 Delta_Partial_BOPS_Push_call')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 4 2 Delta_Bpart_Delete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Create S3 File Container",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json",
								"Accept": "application/json",
								"Authorization": {
									"value": "Bearer @{pipeline().parameters.BearerKey}",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@variables('empty_body')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Push Data To Container",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Lookup grouping",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@activity('Create S3 File Container').output.uploadURI",
								"type": "Expression"
							},
							"method": "PUT",
							"headers": {
								"x-amz-server-side-encryption": "AES256",
								"Content-Type": "application/octet-stream"
							},
							"body": {
								"value": "@concat('{\"delete\": [',activity('Lookup grouping').output.FirstRow.JSONSTRING,']}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Push Container to Stream",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Push Data To Container",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File Container').output.fileid}",
								"type": "Expression"
							},
							"method": "PUT",
							"headers": {
								"Authorization": {
									"value": "Bearer @{pipeline().parameters.BearerKey}",
									"type": "Expression"
								},
								"Content-Type": "application/json"
							},
							"body": {
								"value": "@variables('empty_body')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup grouping",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Create S3 File Container",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select  JSONSTRING \nfrom stg.coveopushdata_json_BPart_Delta_Delete\n ) a\nselect @json as Jsonstring",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Intial Load woCspCnt Update Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Push Container to Stream",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_bpart_Delta_delete_log]",
							"storedProcedureParameters": {
								"AWSContainerFileID": {
									"value": null,
									"type": "String"
								},
								"AWSUploadURI": {
									"value": {
										"value": "@activity('Create S3 File Container').output.uploaduri",
										"type": "Expression"
									},
									"type": "String"
								},
								"BAtchNoStart": {
									"value": "1",
									"type": "Int32"
								},
								"PipelineID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Push Container to Stream').Error?.Message",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string",
						"defaultValue": "blackwoodsnonproduction1rel4b8ue"
					},
					"SourceID": {
						"type": "string",
						"defaultValue": "xqzjpr66aahsdkjh6go4dycoca"
					},
					"BearerKey": {
						"type": "string",
						"defaultValue": "xxfad91265-b288-47b9-a932-2145f82f1611"
					}
				},
				"variables": {
					"count": {
						"type": "String"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/5 BlackOps_Coveo_Data_Reconciliation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "select count(*) wo_count           from [stg].[CoveoPushData_Json_WO_CSP_CNT_Day1]\nselect count(*) bpart_count       from [stg].[CoveoPushData_Json_BPart_Delta_Day1]\nselect count(*) cnt_count           from [stg].[coveopushdata_json_cnt_partial_delta_day1]\nselect count(*) bops_count        from [stg].[CoveoPushData_Json_Bops_Partial_Delta_Day1]\nselect count(*) cnt_count_bpart from [stg].[CoveoPushData_Json_BPart_Delta_Day1]\n     where SUBSTRING(jsonstring,CHARINDEX('ec_contracted_for_cus',jsonstring),25) <> 'ec_contracted_for_cus\":[]'\n\nselect count(*) wo_update from [stg].[CoveoPushData_Json_WO_CSP_CNT_Delta_Update]\nselect count(*) wo_add from [stg].[CoveoPushData_Json_WO_CSP_CNT_Delta_Add]\nselect count(*) wo_delete from [stg].[CoveoPushData_Json_WO_CSP_CNT_Delta_Delete]\n\nSELECT COUNT(*) Bpart_update FROM [stg].[CoveoPushData_Json_BPart_Delta_Add_Update]  WHERE delta_type='U'\nSELECT COUNT(*) Bpart_add FROM [stg].[CoveoPushData_Json_BPart_Delta_Add_Update]  WHERE delta_type='A'\nSELECT count(*) Bpart_delete FROM [stg].[CoveoPushData_Json_BPart_Delta_Delete]\n\nSELECT COUNT(*) CNT_update  FROM [stg].[CoveoPushData_Json_cnt_partial_Delta_Update_Add] WHERE delta_type='U'\nSELECT COUNT(*) CNT_ADD     FROM [stg].[CoveoPushData_Json_cnt_partial_Delta_Update_Add] WHERE delta_type='A'\nSELECT COUNT(*) CNT_DELETE  FROM [stg].[CoveoPushData_Json_cnt_partial_Delta_Update_Add] WHERE delta_type='D'\n\nSELECT COUNT(*) bops_update  FROM [STG].[CoveoPushData_Json_bops_Partial_Delta_Update_Add] WHERE delta_type='U'\nSELECT COUNT(*) bops_ADD     FROM [STG].[CoveoPushData_Json_bops_Partial_Delta_Update_Add] WHERE delta_type='A'\nSELECT COUNT(*) bops_DELETE  FROM [STG].[CoveoPushData_Json_bops_Partial_Delta_Update_Add] WHERE delta_type='D'"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Script2",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "INSERT INTO stg.BlackOps_Coveo_data_reconciliation(BlackOps_wo_CNT_BOPS,\n Blackops_Bpart ,\n Blackops_cnt,\n Blackops_bops,\n Blackops_cnt_bpart,\n Created_date,\n Blackops_wo_update,\n Blackops_wo_add,\n Blackops_wo_delete,\nBlackops_bpart_update,\nBlackops_bpart_add,\nBlackops_bpart_delete,\nBlackops_cnt_update,\nBlackops_cnt_add,\nBlackops_cnt_delete,\nBlackops_bops_update,\nBlackops_bops_add,\nBlackops_bops_delete\n )\nvalues( @{activity('Script1').output.resultSets[0].rows[0].wo_count},\n        @{activity('Script1').output.resultSets[1].rows[0].bpart_count},\n        @{activity('Script1').output.resultSets[2].rows[0].cnt_count},        \n        @{activity('Script1').output.resultSets[3].rows[0].bops_count},\n        @{activity('Script1').output.resultSets[4].rows[0].cnt_count_bpart},\n        getdate(),\n        @{activity('Script1').output.resultSets[5].rows[0].wo_update},\n        @{activity('Script1').output.resultSets[6].rows[0].wo_add},\n        @{activity('Script1').output.resultSets[7].rows[0].wo_delete},        \n        @{activity('Script1').output.resultSets[8].rows[0].Bpart_update},\n        @{activity('Script1').output.resultSets[9].rows[0].Bpart_add},\n        @{activity('Script1').output.resultSets[10].rows[0].Bpart_delete},\n        @{activity('Script1').output.resultSets[11].rows[0].cnt_update},\n        @{activity('Script1').output.resultSets[12].rows[0].cnt_add},        \n        @{activity('Script1').output.resultSets[13].rows[0].cnt_delete},\n        @{activity('Script1').output.resultSets[14].rows[0].bops_update},\n        @{activity('Script1').output.resultSets[15].rows[0].bops_add},                       \n        @{activity('Script1').output.resultSets[16].rows[0].bops_delete}                               \n)",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Script3",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "select count(*) stibo_parts from dbo.Stibo_Parts\n\nselect count(*) vendorparts from dbo.VendorParts\n\nselect count(*) vendorparts_attributespivot from dbo.vendorparts_attributespivot\n\nselect count(*) vendorparts_assetattributes from dbo.vendorparts_assetattributes\n\nselect count(*) customer_specific_parts from dbo.customer_specific_parts\n\nSELECT count(*) contracted_items from dbo.contracted_items\n\nSELECT count(*) customer_lookup from dbo.customer_lookup\n\nSELECT count(*) stock_on_hand from dbo.stock_on_hand\n\nSELECT count(*) BpartsDetails from stg.BpartsDetails\n\nSELECT count(*) codingline from dbo.codingline\n\nSELECT count(*) Vendor_Contact from dbo.Vendor_Contact\n\nSELECT COUNT(*) Vendor_Contact_Boomi FROM DBO.Vendor_Contact_Boomi\n\nSELECT COUNT(*) ecatalogue from dbo.ecatalogue\n\nselect count(*) DimProduct from dbo.DimProduct\n\nselect count(*) WebHierarchy_Attributes from dbo.WebHierarchy_Attributes"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Script4",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Script3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "INSERT INTO [stg].[NDW_Blackops_Data_Reconciliation](\n[created_date]\n      ,[stibo_parts]\n      ,[vendorparts]\n      ,[vendorparts_attributespivot]\n      ,[vendorparts_assetattributes]\n      ,[customer_specific_parts]\n      ,[contracted_items]\n      ,[customer_lookup]\n      ,[stock_on_hand]\n      ,[BpartsDetails]\n      ,[codingline]\n      ,[Vendor_Contact]\n      ,[Vendor_Contact_Boomi]\n      ,[ecatalogue]\n      ,[DimProduct]\n      ,[WebHierarchy_Attributes]\n)\nvalues( getdate(),\n        @{activity('Script3').output.resultSets[0].rows[0].stibo_parts},\n        @{activity('Script3').output.resultSets[1].rows[0].vendorparts},\n        @{activity('Script3').output.resultSets[2].rows[0].vendorparts_attributespivot},        \n        @{activity('Script3').output.resultSets[3].rows[0].vendorparts_assetattributes},\n        @{activity('Script3').output.resultSets[4].rows[0].customer_specific_parts},\n        @{activity('Script3').output.resultSets[5].rows[0].contracted_items},\n        @{activity('Script3').output.resultSets[6].rows[0].customer_lookup},\n        @{activity('Script3').output.resultSets[7].rows[0].stock_on_hand},        \n        @{activity('Script3').output.resultSets[8].rows[0].BpartsDetails},\n        @{activity('Script3').output.resultSets[9].rows[0].codingline},\n        @{activity('Script3').output.resultSets[10].rows[0].Vendor_Contact},\n        @{activity('Script3').output.resultSets[11].rows[0].Vendor_Contact_Boomi},\n        @{activity('Script3').output.resultSets[12].rows[0].ecatalogue},        \n        @{activity('Script3').output.resultSets[13].rows[0].DimProduct},\n        @{activity('Script3').output.resultSets[14].rows[0].WebHierarchy_Attributes}                         \n)",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/destination_BlackOps')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('AECPAABLACKOPSP01')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "WebHierarchy_Attributes"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/4 1 Delta_Partial_CNT_Push_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Stream1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 1').output.FirstRow.Js1,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js1 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream1'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream1_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@variables('Stream1')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream1_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream1]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream1'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push 1').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 1').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream2')), int(variables('Stream2_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 1_copy1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 1_copy1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 1_copy1').output.FirstRow.Js2,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 1_copy1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js2 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream2'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream1 var_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream1_Log_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2_Temp",
										"value": {
											"value": "@variables('Stream2')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2",
										"value": {
											"value": "@{add(int(variables('Stream2_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream1_Log_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1_copy1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream1]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 1_copy1').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 1_copy1').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream2'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push 1_copy1').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 1_copy1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 1_copy1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 1_copy1').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream3_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream3')), int(variables('Stream3_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 3').output.FirstRow.Js3,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js3 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream3'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream3 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3_Temp",
										"value": {
											"value": "@variables('Stream3')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream3 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream3 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3",
										"value": {
											"value": "@{add(int(variables('Stream3_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream1]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream3'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push 3').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 3').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set Stream1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1",
							"value": {
								"value": "@{activity('Lookup_cnt').output.value[0].srt_value}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup_cnt",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT  *  FROM stg.cnt_loaddistributor_delta where id = @{int(variables('id'))}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Stream1_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream1')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Temp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Temp",
							"value": {
								"value": "@{div(add(sub(activity('Lookup_cnt').output.value[0].end_value,activity('Lookup_cnt').output.value[0].srt_value),1),3)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2",
							"value": {
								"value": "@{add(int(variables('Stream1_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream2')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3",
							"value": {
								"value": "@{add(int(variables('Stream2_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3_End",
							"value": {
								"value": "@{activity('Lookup_cnt').output.value[0].end_value}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream1",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream2",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream3",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_End": {
						"type": "String",
						"defaultValue": "100"
					},
					"Stream2": {
						"type": "String",
						"defaultValue": "101"
					},
					"Stream2_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream2_End": {
						"type": "String",
						"defaultValue": "200"
					},
					"Stream3": {
						"type": "String",
						"defaultValue": "201"
					},
					"Stream3_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream3_End": {
						"type": "String",
						"defaultValue": "300"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"Table_name": {
						"type": "String",
						"defaultValue": "stg.CoveoPushData_json_cnt_lookup_delta"
					},
					"Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Source": {
						"type": "String",
						"defaultValue": "xqzjpr66aahsdkjh6go4dycoca"
					},
					"id": {
						"type": "String",
						"defaultValue": "1"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4 2 Delta_Partial_CNT_Push_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Stream1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 1').output.FirstRow.Js1,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js1 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream1'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream1_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@variables('Stream1')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream1_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream1]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream1'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push 1').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 1').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream2')), int(variables('Stream2_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 1_copy1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 1_copy1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 1_copy1').output.FirstRow.Js2,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 1_copy1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js2 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream2'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream1 var_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream1_Log_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2_Temp",
										"value": {
											"value": "@variables('Stream2')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2",
										"value": {
											"value": "@{add(int(variables('Stream2_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream1_Log_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1_copy1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream1]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 1_copy1').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 1_copy1').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream2'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push 1_copy1').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 1_copy1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 1_copy1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 1_copy1').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream3_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream3')), int(variables('Stream3_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 3').output.FirstRow.Js3,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js3 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream3'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream3 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3_Temp",
										"value": {
											"value": "@variables('Stream3')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream3 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream3 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3",
										"value": {
											"value": "@{add(int(variables('Stream3_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream1]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream3'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push 3').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 3').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set Stream1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1",
							"value": {
								"value": "@{activity('Lookup_cnt').output.value[0].srt_value}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup_cnt",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT  *  FROM stg.cnt_loaddistributor_delta where id = @{int(variables('id'))}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Stream1_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream1')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Temp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Temp",
							"value": {
								"value": "@{div(add(sub(activity('Lookup_cnt').output.value[0].end_value,activity('Lookup_cnt').output.value[0].srt_value),1),3)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2",
							"value": {
								"value": "@{add(int(variables('Stream1_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream2')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3",
							"value": {
								"value": "@{add(int(variables('Stream2_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3_End",
							"value": {
								"value": "@{activity('Lookup_cnt').output.value[0].end_value}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream1",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream2",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream3",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_End": {
						"type": "String",
						"defaultValue": "100"
					},
					"Stream2": {
						"type": "String",
						"defaultValue": "101"
					},
					"Stream2_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream2_End": {
						"type": "String",
						"defaultValue": "200"
					},
					"Stream3": {
						"type": "String",
						"defaultValue": "201"
					},
					"Stream3_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream3_End": {
						"type": "String",
						"defaultValue": "300"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"Table_name": {
						"type": "String",
						"defaultValue": "stg.CoveoPushData_json_cnt_lookup_delta"
					},
					"Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Source": {
						"type": "String",
						"defaultValue": "xqzjpr66aahsdkjh6go4dycoca"
					},
					"id": {
						"type": "String",
						"defaultValue": "2"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4 3 Delta_Partial_CNT_Push_3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Stream1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 1').output.FirstRow.Js1,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js1 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream1'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream1_Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@variables('Stream1')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream1_Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream1]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 1').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream1'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push 1').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 1').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream2')), int(variables('Stream2_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 1_copy1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 1_copy1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 1_copy1').output.FirstRow.Js2,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 1_copy1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js2 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream2'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream1 var_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream1_Log_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2_Temp",
										"value": {
											"value": "@variables('Stream2')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2",
										"value": {
											"value": "@{add(int(variables('Stream2_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream1_Log_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1_copy1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream1]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 1_copy1').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 1_copy1').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream2'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push 1_copy1').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 1_copy1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 1_copy1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 1_copy1').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Until_Stream3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream3_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream3')), int(variables('Stream3_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Coveo Stream Open 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 3').output.FirstRow.Js3,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT  Jsonstring as js3 FROM @{variables('Table_name')} \nwhere BatchNo=@{int(variables('Stream3'))}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream3 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SP_Update_Stream3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3_Temp",
										"value": {
											"value": "@variables('Stream3')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream3 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream3 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3",
										"value": {
											"value": "@{add(int(variables('Stream3_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SP_Update_Stream3",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Update_coveopushdata_json_cnt_stream1]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.fileId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Coveo Stream Open 3').output.Uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@{int(variables('Stream3'))}",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Coveo Stream Chunk Push 3').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Coveo Stream Open 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 3').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set Stream1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1",
							"value": {
								"value": "@{activity('Lookup_cnt').output.value[0].srt_value}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup_cnt",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT  *  FROM stg.cnt_loaddistributor_delta where id = @{int(variables('id'))}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Stream1_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream1')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Temp",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Temp",
							"value": {
								"value": "@{div(add(sub(activity('Lookup_cnt').output.value[0].end_value,activity('Lookup_cnt').output.value[0].srt_value),1),3)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream1_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2",
							"value": {
								"value": "@{add(int(variables('Stream1_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2_End",
							"value": {
								"value": "@{sub(add(int(variables('Stream2')),int(variables('Temp'))),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream2_End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3",
							"value": {
								"value": "@{add(int(variables('Stream2_End')),1)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3_End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set Stream3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3_End",
							"value": {
								"value": "@{activity('Lookup_cnt').output.value[0].end_value}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream1",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream3",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream2",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_End": {
						"type": "String",
						"defaultValue": "100"
					},
					"Stream2": {
						"type": "String",
						"defaultValue": "101"
					},
					"Stream2_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream2_End": {
						"type": "String",
						"defaultValue": "200"
					},
					"Stream3": {
						"type": "String",
						"defaultValue": "201"
					},
					"Stream3_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream3_End": {
						"type": "String",
						"defaultValue": "300"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"Table_name": {
						"type": "String",
						"defaultValue": "stg.CoveoPushData_json_cnt_lookup_delta"
					},
					"Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Source": {
						"type": "String",
						"defaultValue": "xqzjpr66aahsdkjh6go4dycoca"
					},
					"id": {
						"type": "String",
						"defaultValue": "3"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 1 Delta_initial_load_Update')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@less(int(activity('Lookup1').output.firstRow.cnt),18)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Update count",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Load Distributor",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "select * from stg.coveopushdata_initialload_loaddistributor_delta",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Stream1 123",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update count",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "2 1 2 Delta_initial_update_Push",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"start1": {
												"value": "@{activity('Update count').output.value[0].Batch_start}",
												"type": "Expression"
											},
											"end1": {
												"value": "@{activity('Update count').output.value[0].Batch_end}",
												"type": "Expression"
											},
											"start2": {
												"value": "@{activity('Update count').output.value[1].Batch_start}",
												"type": "Expression"
											},
											"end2": {
												"value": "@{activity('Update count').output.value[1].Batch_end}",
												"type": "Expression"
											},
											"start3": {
												"value": "@{activity('Update count').output.value[2].Batch_start}",
												"type": "Expression"
											},
											"end3": {
												"value": "@{activity('Update count').output.value[2].Batch_end}",
												"type": "Expression"
											},
											"OrganizationID": {
												"value": "@pipeline().parameters.OrganizationID",
												"type": "Expression"
											},
											"SourceID": {
												"value": "@pipeline().parameters.SourceID",
												"type": "Expression"
											},
											"BearerKey": {
												"value": "@pipeline().parameters.BearerKey",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Load Distributor",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[coveopushdata_initialload_loaddistributor_delta]",
										"storedProcedureParameters": {
											"parallelstreams": {
												"value": "18",
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Stream2 456",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update count",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "2 1 2 Delta_initial_update_Push",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"start1": {
												"value": "@{activity('Update count').output.value[3].Batch_start}",
												"type": "Expression"
											},
											"end1": {
												"value": "@{activity('Update count').output.value[3].Batch_end}",
												"type": "Expression"
											},
											"start2": {
												"value": "@{activity('Update count').output.value[4].Batch_start}",
												"type": "Expression"
											},
											"end2": {
												"value": "@{activity('Update count').output.value[4].Batch_end}",
												"type": "Expression"
											},
											"start3": {
												"value": "@{activity('Update count').output.value[5].Batch_start}",
												"type": "Expression"
											},
											"end3": {
												"value": "@{activity('Update count').output.value[5].Batch_end}",
												"type": "Expression"
											},
											"OrganizationID": {
												"value": "@pipeline().parameters.OrganizationID",
												"type": "Expression"
											},
											"SourceID": {
												"value": "@pipeline().parameters.SourceID",
												"type": "Expression"
											},
											"BearerKey": {
												"value": "@pipeline().parameters.BearerKey",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Stream3 789",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update count",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "2 1 2 Delta_initial_update_Push",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"start1": {
												"value": "@{activity('Update count').output.value[6].Batch_start}",
												"type": "Expression"
											},
											"end1": {
												"value": "@{activity('Update count').output.value[6].Batch_end}",
												"type": "Expression"
											},
											"start2": {
												"value": "@{activity('Update count').output.value[7].Batch_start}",
												"type": "Expression"
											},
											"end2": {
												"value": "@{activity('Update count').output.value[7].Batch_end}",
												"type": "Expression"
											},
											"start3": {
												"value": "@{activity('Update count').output.value[8].Batch_start}",
												"type": "Expression"
											},
											"end3": {
												"value": "@{activity('Update count').output.value[8].Batch_end}",
												"type": "Expression"
											},
											"OrganizationID": {
												"value": "@pipeline().parameters.OrganizationID",
												"type": "Expression"
											},
											"SourceID": {
												"value": "@pipeline().parameters.SourceID",
												"type": "Expression"
											},
											"BearerKey": {
												"value": "@pipeline().parameters.BearerKey",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Stream4 101112",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update count",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "2 1 2 Delta_initial_update_Push",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"start1": {
												"value": "@{activity('Update count').output.value[9].Batch_start}",
												"type": "Expression"
											},
											"end1": {
												"value": "@{activity('Update count').output.value[9].Batch_end}",
												"type": "Expression"
											},
											"start2": {
												"value": "@{activity('Update count').output.value[10].Batch_start}",
												"type": "Expression"
											},
											"end2": {
												"value": "@{activity('Update count').output.value[10].Batch_end}",
												"type": "Expression"
											},
											"start3": {
												"value": "@{activity('Update count').output.value[11].Batch_start}",
												"type": "Expression"
											},
											"end3": {
												"value": "@{activity('Update count').output.value[11].Batch_end}",
												"type": "Expression"
											},
											"OrganizationID": {
												"value": "@pipeline().parameters.OrganizationID",
												"type": "Expression"
											},
											"SourceID": {
												"value": "@pipeline().parameters.SourceID",
												"type": "Expression"
											},
											"BearerKey": {
												"value": "@pipeline().parameters.BearerKey",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Stream5 131415",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update count",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "2 1 2 Delta_initial_update_Push",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"start1": {
												"value": "@{activity('Update count').output.value[12].Batch_start}",
												"type": "Expression"
											},
											"end1": {
												"value": "@{activity('Update count').output.value[12].Batch_end}",
												"type": "Expression"
											},
											"start2": {
												"value": "@{activity('Update count').output.value[13].Batch_start}",
												"type": "Expression"
											},
											"end2": {
												"value": "@{activity('Update count').output.value[13].Batch_end}",
												"type": "Expression"
											},
											"start3": {
												"value": "@{activity('Update count').output.value[14].Batch_start}",
												"type": "Expression"
											},
											"end3": {
												"value": "@{activity('Update count').output.value[14].Batch_end}",
												"type": "Expression"
											},
											"OrganizationID": {
												"value": "@pipeline().parameters.OrganizationID",
												"type": "Expression"
											},
											"SourceID": {
												"value": "@pipeline().parameters.SourceID",
												"type": "Expression"
											},
											"BearerKey": {
												"value": "@pipeline().parameters.BearerKey",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Stream6 161718",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Update count",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "2 1 2 Delta_initial_update_Push",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"start1": {
												"value": "@{activity('Update count').output.value[15].Batch_start}",
												"type": "Expression"
											},
											"end1": {
												"value": "@{activity('Update count').output.value[15].Batch_end}",
												"type": "Expression"
											},
											"start2": {
												"value": "@{activity('Update count').output.value[16].Batch_start}",
												"type": "Expression"
											},
											"end2": {
												"value": "@{activity('Update count').output.value[16].Batch_end}",
												"type": "Expression"
											},
											"start3": {
												"value": "@{activity('Update count').output.value[17].Batch_start}",
												"type": "Expression"
											},
											"end3": {
												"value": "@{activity('Update count').output.value[17].Batch_end}",
												"type": "Expression"
											},
											"OrganizationID": {
												"value": "@pipeline().parameters.OrganizationID",
												"type": "Expression"
											},
											"SourceID": {
												"value": "@pipeline().parameters.SourceID",
												"type": "Expression"
											},
											"BearerKey": {
												"value": "@pipeline().parameters.BearerKey",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Lookup_cnt 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_wo_csp_cnt_delta_update\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Create S3 File Container",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"Accept": "application/json",
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Data To Container",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Lookup_cnt 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Create S3 File Container",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 File Container').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@activity('Lookup_cnt 1').output.FirstRow.Jsonstring",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push Data To Container",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File Container').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Intial Load woCspCnt Update Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Push Container to Stream",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CoveoPushData_wo_csp_cnt_Delta_Update_log]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": null,
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 File Container').output.uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": "1",
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Push Container to Stream').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select count(*) cnt from stg.coveopushdata_json_wo_csp_cnt_delta_update",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference"
							}
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String",
						"defaultValue": "45001"
					},
					"Stream1_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_End": {
						"type": "String",
						"defaultValue": "60000"
					},
					"Stream2": {
						"type": "String",
						"defaultValue": "60001"
					},
					"Stream2_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream2_End": {
						"type": "String",
						"defaultValue": "75000"
					},
					"Stream3": {
						"type": "String",
						"defaultValue": "75001"
					},
					"Stream3_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream3_End": {
						"type": "String",
						"defaultValue": "90000"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"Table_name": {
						"type": "String",
						"defaultValue": "stg.CoveoPushData_json_wo_csp_cnt_delta_update"
					},
					"Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Source": {
						"type": "String",
						"defaultValue": "xqzjpr66aahsdkjh6go4dycoca"
					},
					"id": {
						"type": "String",
						"defaultValue": "2"
					},
					"Stream4": {
						"type": "String",
						"defaultValue": "90001"
					},
					"Stream4_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream4_End": {
						"type": "String",
						"defaultValue": "106420"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]",
				"[concat(variables('factoryId'), '/pipelines/2 1 2 Delta_initial_update_Push')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 2 Delta_initial_load_Delete')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_cnt 1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select '{\"documentId\":\"product://'+product_id+'\"}' JSONSTRING from stg.coveopushdata_json_wo_csp_cnt_delta_delete\nwhere row_no<=@{int(variables('count'))} ) a\nselect @json as Jsonstring",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Create S3 File Container",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Lookup_cnt 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
								"type": "Expression"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json",
								"Accept": "application/json",
								"Authorization": {
									"value": "Bearer @{pipeline().parameters.BearerKey}",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@variables('empty_body')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Push Data To Container",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Create S3 File Container",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@activity('Create S3 File Container').output.uploadURI",
								"type": "Expression"
							},
							"method": "PUT",
							"headers": {
								"x-amz-server-side-encryption": "AES256",
								"Content-Type": "application/octet-stream"
							},
							"body": {
								"value": "@concat('{\"delete\": [',activity('Lookup_cnt 1').output.FirstRow.JSONSTRING,']}')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Push Container to Stream",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Push Data To Container",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File Container').output.fileid}",
								"type": "Expression"
							},
							"method": "PUT",
							"headers": {
								"Authorization": {
									"value": "Bearer @{pipeline().parameters.BearerKey}",
									"type": "Expression"
								},
								"Content-Type": "application/json"
							},
							"body": {
								"value": "@variables('empty_body')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup_cnt 1_copy1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select count(*) cnt from stg.coveopushdata_json_wo_csp_cnt_delta_delete\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt 1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "count",
							"value": {
								"value": "@{int(activity('Lookup_cnt 1_copy1').output.firstRow.cnt)}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Intial Load woCspCnt Delete Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Push Container to Stream",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[CoveoPushData_wo_csp_cnt_Delta_delete_log]",
							"storedProcedureParameters": {
								"AWSContainerFileID": {
									"value": null,
									"type": "String"
								},
								"AWSUploadURI": {
									"value": {
										"value": "@activity('Create S3 File Container').output.uploaduri",
										"type": "Expression"
									},
									"type": "String"
								},
								"BAtchNoStart": {
									"value": {
										"value": "@int(variables('count'))",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"PipelineID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Push Container to Stream').Error?.Message",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('AECPAABLACKOPSP01')]",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"count": {
						"type": "String"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 3 Delta_initial_load_Add')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Stream1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set stream1 End",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup_cnt 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_wo_csp_cnt_delta_add\nwhere row_no>=@{int(variables('Stream1'))} and \n      row_no<=@{add(int(variables('Stream1')),499)} ) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Intial Load woCspCnt Add Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@variables('Stream1')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),500)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Create S3 File Container",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"Accept": "application/json",
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@{variables('empty_body')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Data To Container",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Create S3 File Container",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup_cnt 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 File Container').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"addOrUpdate\": [',activity('Lookup_cnt 1').output.FirstRow.Jsonstring,']}')\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push Data To Container",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File Container').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Intial Load woCspCnt Add Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Push Container to Stream",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CoveoPushData_wo_csp_cnt_Delta_add_log]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": null,
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 File Container').output.uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@int(variables('Stream1'))",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Push Container to Stream').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Lookup_cnt Add",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select count(*) cnt from stg.coveopushdata_json_wo_csp_cnt_delta_add",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Set stream1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt Add",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1",
							"value": "1"
						}
					},
					{
						"name": "Set stream1 End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup_cnt Add",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1_End",
							"value": {
								"value": "@{int(activity('Lookup_cnt Add').output.firstRow.cnt)}",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_Temp": {
						"type": "String",
						"defaultValue": "1"
					},
					"Stream1_End": {
						"type": "String",
						"defaultValue": "2452"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/4 4 Delta_Partial_CNT_Error_Batches_Repushing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Error New Batches Preparation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select\tmin(id) as RowStart,\n\t\tmax(id) as RowEnd \nfrom [stg].[CoveoPushdata_json_cnt_delta_error_records_New_Ranges]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps",
								"type": "DatasetReference"
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Set Start",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RowStart",
							"value": {
								"value": "@{activity('Lookup1').output.value[0].RowStart}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "RowEnd",
							"value": {
								"value": "@{activity('Lookup1').output.value[0].RowEnd}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Resending",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Start",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(variables('RowStart'),variables('RowEnd'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Coveo Stream Chunk Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Open 1",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup_cnt 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Coveo Stream Open 1').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup_cnt 1').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Coveo Push 1",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Temp",
										"value": {
											"value": "@{variables('RowStart')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "RowStart",
										"value": {
											"value": "@{add(int(variables('Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Stream Open 1",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json",
											"Accept": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Coveo Push 1",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Coveo Stream Chunk Push 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Coveo Stream Open 1').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Lookup_cnt 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) \nFROM (      select Jsonstring from [stg].[CoveoPushData_Json_cnt_partial_Delta_Update_Add]\n            where row_no>=(\tselect start_rowno from [stg].[CoveoPushdata_json_cnt_delta_error_records_New_Ranges]\n\t\t\t\t\t\t\twhere id =@{int(variables('RowStart'))}) and \n                  row_no<=(\tselect end_rowno from [stg].[CoveoPushdata_json_cnt_delta_error_records_New_Ranges]\n\t\t\t\t\t\t\twhere id =@{int(variables('RowStart'))})\n      ) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Error New Batches Preparation",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stg].[CoveoPushdata_json_cnt_delta_error_records_maxpayload_again]"
						},
						"linkedServiceName": {
							"referenceName": "[parameters('blackopsProdLink')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "[parameters('blackopsProdLink')]",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "truncate table [stg].[CoveoPushdata_json_cnt_delta_error_records]\n\ninsert into [stg].[CoveoPushdata_json_cnt_delta_error_records](Batchno,ErrorMessage)\nselect BatchNo,Errormessage from stg.[CoveoPushData_cnt_stream1]\nwhere Errormessage like '%service is too large%'"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string",
						"defaultValue": "blackwoodsproductiondb4f7vq2"
					},
					"SourceID": {
						"type": "string",
						"defaultValue": "skmopt6atrldmbcplagqyg2kqa"
					},
					"BearerKey": {
						"type": "string",
						"defaultValue": "xx1b9103ee-5ac4-4917-a945-66f5b26def8b"
					}
				},
				"variables": {
					"RowStart": {
						"type": "String"
					},
					"RowEnd": {
						"type": "String"
					},
					"Temp": {
						"type": "String"
					},
					"Empty_Body": {
						"type": "String",
						"defaultValue": "{}"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps')]",
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 1 Delta_Partial_BOPS_Push_call')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get rows count Add Update Delete",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select max(row_no) cnt from stg.coveopushdata_json_bops_partial_Delta_update_Add",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "destination_BlackOps1",
								"type": "DatasetReference"
							}
						}
					},
					{
						"name": "Set stream1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get rows count Add Update Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1",
							"value": "1"
						}
					},
					{
						"name": "Set stream1 End",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get rows count Add Update Delete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1_End",
							"value": {
								"value": "@{activity('Get rows count Add Update Delete').output.firstRow.cnt}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until_Stream",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set stream1 End",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_bops_partial_Delta_update_Add\nwhere row_no>=@{int(variables('Stream1'))} and \n      row_no<=@{add(int(variables('Stream1')),99)}\n      ) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Push Data To Container 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@{variables('Stream1')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),100)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Create S3 File Container 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"Accept": "application/json",
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@{variables('empty_body')}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Data To Container 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Create S3 File Container 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 File Container 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"partialUpdate\": [',activity('Lookup').output.FirstRow.Jsonstring,']}')\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push Data To Container 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File Container 2').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"parameters": {
					"OrganizationID": {
						"type": "string",
						"defaultValue": "blackwoodsnonproduction18ywd51dd"
					},
					"SourceID": {
						"type": "string",
						"defaultValue": "wfprngzh3psutpsinc7po7sl4u"
					},
					"BearerKey": {
						"type": "string",
						"defaultValue": "xxe4ddf465-208c-4042-951f-6a4e4339fa46"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String"
					},
					"Stream1_End": {
						"type": "String"
					},
					"Stream1_Temp": {
						"type": "String"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/2 1 2 Delta_initial_update_Push')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until_Stream1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Stream1 End",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup_cnt 1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(     select Jsonstring from stg.coveopushdata_json_wo_csp_cnt_delta_lookup\n      where batchno=@{int(variables('Stream1'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream1 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Intial Load woCspCnt Update Log",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1_Temp",
										"value": {
											"value": "@variables('Stream1')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream1 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream1 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream1",
										"value": {
											"value": "@{add(int(variables('Stream1_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Create S3 File Container",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"Accept": "application/json",
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Data To Container",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Create S3 File Container",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup_cnt 1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 File Container').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup_cnt 1').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push Data To Container",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File Container').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Intial Load woCspCnt Update Log",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Push Container to Stream",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CoveoPushData_wo_csp_cnt_Delta_Update_log]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": null,
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 File Container').output.uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@int(variables('Stream1'))",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Push Container to Stream').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set Stream1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1",
							"value": {
								"value": "@pipeline().parameters.start1",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream1 End",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream1_End",
							"value": {
								"value": "@pipeline().parameters.end1",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until_Stream2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream2 End",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Stream2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream2')), int(variables('Stream2_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup_cnt 2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(     select Jsonstring from stg.coveopushdata_json_wo_csp_cnt_delta_lookup\n      where batchno=@{int(variables('Stream2'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream2 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Intial Load woCspCnt Update Log_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2_Temp",
										"value": {
											"value": "@variables('Stream2')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream2 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream2 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream2",
										"value": {
											"value": "@{add(int(variables('Stream2_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Create S3 File Container 2",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"Accept": "application/json",
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Data To Container 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Create S3 File Container 2",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup_cnt 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 File Container 2').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup_cnt 2').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream 2",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push Data To Container 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File Container 2').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Intial Load woCspCnt Update Log_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Push Container to Stream 2",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CoveoPushData_wo_csp_cnt_Delta_Update_log]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": null,
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 File Container 2').output.uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@int(variables('Stream2'))",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Push Container to Stream 2').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set Stream2",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2",
							"value": {
								"value": "@pipeline().parameters.start2",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream2 End",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream2_End",
							"value": {
								"value": "@pipeline().parameters.end2",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3",
							"value": {
								"value": "@pipeline().parameters.start3",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Stream3 End",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Stream3_End",
							"value": {
								"value": "@pipeline().parameters.end3",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Until_Stream3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Stream3 End",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Stream3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(int(variables('Stream3')), int(variables('Stream3_End')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Lookup_cnt 3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(     select Jsonstring from stg.coveopushdata_json_wo_csp_cnt_delta_lookup\n      where batchno=@{int(variables('Stream3'))}\n) a\nselect @json as Jsonstring",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "destination_BlackOps1",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "Stream3 var",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Intial Load woCspCnt Update Log_copy2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3_Temp",
										"value": {
											"value": "@variables('Stream3')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Stream3 varSet",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Stream3 var",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Stream3",
										"value": {
											"value": "@{add(int(variables('Stream3_Temp')),1)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Create S3 File Container 3",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
											"type": "Expression"
										},
										"method": "POST",
										"headers": {
											"Content-Type": "application/json",
											"Accept": "application/json",
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											}
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Data To Container 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Create S3 File Container 3",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Lookup_cnt 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Create S3 File Container 3').output.uploadURI",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"x-amz-server-side-encryption": "AES256",
											"Content-Type": "application/octet-stream"
										},
										"body": {
											"value": "@concat('{\"AddOrUpdate\": [',activity('Lookup_cnt 3').output.FirstRow.Jsonstring,']}')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Push Container to Stream 3",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Push Data To Container 3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File Container 3').output.fileid}",
											"type": "Expression"
										},
										"method": "PUT",
										"headers": {
											"Authorization": {
												"value": "Bearer @{pipeline().parameters.BearerKey}",
												"type": "Expression"
											},
											"Content-Type": "application/json"
										},
										"body": {
											"value": "@variables('empty_body')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Intial Load woCspCnt Update Log_copy2",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Push Container to Stream 3",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[CoveoPushData_wo_csp_cnt_Delta_Update_log]",
										"storedProcedureParameters": {
											"AWSContainerFileID": {
												"value": null,
												"type": "String"
											},
											"AWSUploadURI": {
												"value": {
													"value": "@activity('Create S3 File Container 3').output.uploaduri",
													"type": "Expression"
												},
												"type": "String"
											},
											"BAtchNoStart": {
												"value": {
													"value": "@int(variables('Stream3'))",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineID": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@activity('Push Container to Stream 3').Error?.Message",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('AECPAABLACKOPSP01')]",
										"type": "LinkedServiceReference"
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream1",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream2",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait3",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Until_Stream3",
								"dependencyConditions": [
									"Succeeded",
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"parameters": {
					"start1": {
						"type": "string"
					},
					"end1": {
						"type": "string"
					},
					"start2": {
						"type": "string"
					},
					"end2": {
						"type": "string"
					},
					"start3": {
						"type": "string"
					},
					"end3": {
						"type": "string"
					},
					"OrganizationID": {
						"type": "string"
					},
					"SourceID": {
						"type": "string"
					},
					"BearerKey": {
						"type": "string"
					}
				},
				"variables": {
					"Stream1": {
						"type": "String"
					},
					"Stream1_End": {
						"type": "String"
					},
					"Stream1_Temp": {
						"type": "String"
					},
					"empty_body": {
						"type": "String",
						"defaultValue": "{}"
					},
					"Stream2": {
						"type": "String"
					},
					"Stream2_End": {
						"type": "String"
					},
					"Stream2_Temp": {
						"type": "String"
					},
					"Stream3": {
						"type": "String"
					},
					"Stream3_End": {
						"type": "String"
					},
					"Stream3_Temp": {
						"type": "String"
					},
					"batchsize": {
						"type": "String",
						"defaultValue": "100"
					}
				},
				"folder": {
					"name": "BlackOps to Coveo Delta Load Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/destination_BlackOps1')]"
			]
		}
	]
}