{
	"name": "2 3 Delta_initial_load_Add",
	"properties": {
		"activities": [
			{
				"name": "Until_Stream1",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Set stream1 End",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set stream1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(int(variables('Stream1')), int(variables('Stream1_End')))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Lookup_cnt 1",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "DECLARE @json nvarchar(max);\nSELECT  @json = coalesce(@json + ','+JSONSTRING,JSONSTRING) FROM\n(select Jsonstring from stg.coveopushdata_json_wo_csp_cnt_delta_add\nwhere row_no>=@{int(variables('Stream1'))} and \n      row_no<=@{add(int(variables('Stream1')),499)} ) a\nselect @json as Jsonstring",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "destination_BlackOps1",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Stream1 var",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Intial Load woCspCnt Add Log",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Stream1_Temp",
								"value": {
									"value": "@variables('Stream1')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Stream1 varSet",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Stream1 var",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "Stream1",
								"value": {
									"value": "@{add(int(variables('Stream1_Temp')),500)}",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Create S3 File Container",
							"type": "WebActivity",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/files?useVirtualHostedStyleUrl=true",
									"type": "Expression"
								},
								"method": "POST",
								"headers": {
									"Content-Type": "application/json",
									"Accept": "application/json",
									"Authorization": {
										"value": "Bearer @{pipeline().parameters.BearerKey}",
										"type": "Expression"
									}
								},
								"body": {
									"value": "@{variables('empty_body')}",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Push Data To Container",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Create S3 File Container",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Lookup_cnt 1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 2,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@activity('Create S3 File Container').output.uploadURI",
									"type": "Expression"
								},
								"method": "PUT",
								"headers": {
									"x-amz-server-side-encryption": "AES256",
									"Content-Type": "application/octet-stream"
								},
								"body": {
									"value": "@concat('{\"addOrUpdate\": [',activity('Lookup_cnt 1').output.FirstRow.Jsonstring,']}')\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Push Container to Stream",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Push Data To Container",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "https://api-au.cloud.coveo.com/push/v1/organizations/@{pipeline().parameters.OrganizationID}/sources/@{pipeline().parameters.OrganizationID}-@{pipeline().parameters.SourceID}/stream/update?fileId=@{activity('Create S3 File Container').output.fileid}",
									"type": "Expression"
								},
								"method": "PUT",
								"headers": {
									"Authorization": {
										"value": "Bearer @{pipeline().parameters.BearerKey}",
										"type": "Expression"
									},
									"Content-Type": "application/json"
								},
								"body": {
									"value": "@variables('empty_body')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Intial Load woCspCnt Add Log",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Push Container to Stream",
									"dependencyConditions": [
										"Succeeded",
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[CoveoPushData_wo_csp_cnt_Delta_add_log]",
								"storedProcedureParameters": {
									"AWSContainerFileID": {
										"value": null,
										"type": "String"
									},
									"AWSUploadURI": {
										"value": {
											"value": "@activity('Create S3 File Container').output.uploaduri",
											"type": "Expression"
										},
										"type": "String"
									},
									"BAtchNoStart": {
										"value": {
											"value": "@int(variables('Stream1'))",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"PipelineID": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"ErrorMessage": {
										"value": {
											"value": "@activity('Push Container to Stream').Error?.Message",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							}
						}
					],
					"timeout": "7.00:00:00"
				}
			},
			{
				"name": "Lookup_cnt Add",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select count(*) cnt from stg.coveopushdata_json_wo_csp_cnt_delta_add",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "destination_BlackOps1",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Set stream1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup_cnt Add",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "Stream1",
					"value": "1"
				}
			},
			{
				"name": "Set stream1 End",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup_cnt Add",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "Stream1_End",
					"value": {
						"value": "@{int(activity('Lookup_cnt Add').output.firstRow.cnt)}",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"OrganizationID": {
				"type": "string"
			},
			"SourceID": {
				"type": "string"
			},
			"BearerKey": {
				"type": "string"
			}
		},
		"variables": {
			"Stream1": {
				"type": "String",
				"defaultValue": "1"
			},
			"Stream1_Temp": {
				"type": "String",
				"defaultValue": "1"
			},
			"Stream1_End": {
				"type": "String",
				"defaultValue": "2452"
			},
			"empty_body": {
				"type": "String",
				"defaultValue": "{}"
			}
		},
		"folder": {
			"name": "BlackOps to Coveo Delta Load Pipelines"
		},
		"annotations": []
	}
}